{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _window$document;\nimport { Platform } from 'expo-modules-core';\nimport qs from 'qs';\nvar isDOMAvailable = Platform.OS === 'web' && typeof window !== 'undefined' && !!((_window$document = window.document) != null && _window$document.createElement) && typeof URL !== 'undefined';\nexport function requestAsync(_x, _x2) {\n  return _requestAsync.apply(this, arguments);\n}\nfunction _requestAsync() {\n  _requestAsync = _asyncToGenerator(function* (requestUrl, fetchRequest) {\n    var _fetchRequest$dataTyp;\n    if (Platform.OS === 'web' && !isDOMAvailable) {\n      return;\n    }\n    var url = new URL(requestUrl);\n    var request = {\n      method: fetchRequest.method,\n      mode: 'cors',\n      headers: {}\n    };\n    var isJsonDataType = ((_fetchRequest$dataTyp = fetchRequest.dataType) == null ? void 0 : _fetchRequest$dataTyp.toLowerCase()) === 'json';\n    if (fetchRequest.headers) {\n      for (var i in fetchRequest.headers) {\n        if (i in fetchRequest.headers) {\n          request.headers[i] = fetchRequest.headers[i];\n        }\n      }\n    }\n    if (fetchRequest.body) {\n      var _fetchRequest$method;\n      if (((_fetchRequest$method = fetchRequest.method) == null ? void 0 : _fetchRequest$method.toUpperCase()) === 'POST') {\n        request.body = qs.stringify(fetchRequest.body);\n      } else {\n        for (var key of Object.keys(fetchRequest.body)) {\n          url.searchParams.append(key, fetchRequest.body[key]);\n        }\n      }\n    }\n    if (isJsonDataType && !('Accept' in request.headers)) {\n      request.headers['Accept'] = 'application/json, text/javascript; q=0.01';\n    }\n    var correctedUrl = url.toString().replace(/\\/$/, '');\n    var response = yield fetch(correctedUrl, request);\n    var contentType = response.headers.get('content-type');\n    if (isJsonDataType || contentType != null && contentType.includes('application/json')) {\n      return response.json();\n    }\n    return response.text();\n  });\n  return _requestAsync.apply(this, arguments);\n}","map":{"version":3,"names":["Platform","qs","isDOMAvailable","OS","window","_window$document","document","createElement","URL","requestAsync","_x","_x2","_requestAsync","apply","arguments","_asyncToGenerator","requestUrl","fetchRequest","_fetchRequest$dataTyp","url","request","method","mode","headers","isJsonDataType","dataType","toLowerCase","i","body","_fetchRequest$method","toUpperCase","stringify","key","Object","keys","searchParams","append","correctedUrl","toString","replace","response","fetch","contentType","get","includes","json","text"],"sources":["C:\\Users\\Lucas\\Desktop\\Projetos\\Istudy\\node_modules\\expo-auth-session\\src\\Fetch.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport qs from 'qs';\n\nexport type Headers = Record<string, string> & {\n  'Content-Type': string;\n  Authorization?: string;\n  Accept?: string;\n};\n\nexport type FetchRequest = {\n  headers?: Headers;\n  body?: Record<string, string>;\n  dataType?: string;\n  method?: string;\n};\n\n// TODO(Bacon): pending react-native-adapter publish after sdk 38\nconst isDOMAvailable =\n  Platform.OS === 'web' &&\n  typeof window !== 'undefined' &&\n  !!window.document?.createElement &&\n  typeof URL !== 'undefined';\n\nexport async function requestAsync<T>(requestUrl: string, fetchRequest: FetchRequest): Promise<T> {\n  if (Platform.OS === 'web' && !isDOMAvailable) {\n    // @ts-ignore\n    return;\n  }\n  const url = new URL(requestUrl);\n\n  const request: Omit<RequestInit, 'headers'> & { headers: HeadersInit } = {\n    method: fetchRequest.method,\n    mode: 'cors',\n    headers: {},\n  };\n\n  const isJsonDataType = fetchRequest.dataType?.toLowerCase() === 'json';\n\n  if (fetchRequest.headers) {\n    for (const i in fetchRequest.headers) {\n      if (i in fetchRequest.headers) {\n        request.headers[i] = fetchRequest.headers[i] as string;\n      }\n    }\n  }\n\n  if (fetchRequest.body) {\n    if (fetchRequest.method?.toUpperCase() === 'POST') {\n      request.body = qs.stringify(fetchRequest.body);\n    } else {\n      for (const key of Object.keys(fetchRequest.body)) {\n        url.searchParams.append(key, fetchRequest.body[key]);\n      }\n    }\n  }\n\n  if (isJsonDataType && !('Accept' in request.headers)) {\n    // NOTE: Github authentication will return XML if this includes the standard `*/*`\n    request.headers['Accept'] = 'application/json, text/javascript; q=0.01';\n  }\n\n  // Fix a problem with React Native `URL` causing a trailing slash to be added.\n  const correctedUrl = url.toString().replace(/\\/$/, '');\n\n  const response = await fetch(correctedUrl, request);\n\n  const contentType = response.headers.get('content-type');\n  if (isJsonDataType || contentType?.includes('application/json')) {\n    return response.json();\n  }\n  // @ts-ignore: Type 'string' is not assignable to type 'T'.\n  return response.text();\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,EAAE,MAAM,IAAI;AAgBnB,IAAMC,cAAc,GAClBF,QAAQ,CAACG,EAAE,KAAK,KAAK,IACrB,OAAOC,MAAM,KAAK,WAAW,IAC7B,CAAC,GAAAC,gBAAA,GAACD,MAAM,CAACE,QAAQ,aAAfD,gBAAA,CAAiBE,aAAa,KAChC,OAAOC,GAAG,KAAK,WAAW;AAE5B,gBAAsBC,YAAYA,CAAAC,EAAA,EAAAC,GAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAiDjC,SAAAF,cAAA;EAAAA,aAAA,GAAAG,iBAAA,CAjDM,WAA+BC,UAAkB,EAAEC,YAA0B;IAAA,IAAAC,qBAAA;IAClF,IAAIlB,QAAQ,CAACG,EAAE,KAAK,KAAK,IAAI,CAACD,cAAc,EAAE;MAE5C;;IAEF,IAAMiB,GAAG,GAAG,IAAIX,GAAG,CAACQ,UAAU,CAAC;IAE/B,IAAMI,OAAO,GAA4D;MACvEC,MAAM,EAAEJ,YAAY,CAACI,MAAM;MAC3BC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAE;KACV;IAED,IAAMC,cAAc,GAAG,EAAAN,qBAAA,GAAAD,YAAY,CAACQ,QAAQ,qBAArBP,qBAAA,CAAuBQ,WAAW,EAAE,MAAK,MAAM;IAEtE,IAAIT,YAAY,CAACM,OAAO,EAAE;MACxB,KAAK,IAAMI,CAAC,IAAIV,YAAY,CAACM,OAAO,EAAE;QACpC,IAAII,CAAC,IAAIV,YAAY,CAACM,OAAO,EAAE;UAC7BH,OAAO,CAACG,OAAO,CAACI,CAAC,CAAC,GAAGV,YAAY,CAACM,OAAO,CAACI,CAAC,CAAW;;;;IAK5D,IAAIV,YAAY,CAACW,IAAI,EAAE;MAAA,IAAAC,oBAAA;MACrB,IAAI,EAAAA,oBAAA,GAAAZ,YAAY,CAACI,MAAM,qBAAnBQ,oBAAA,CAAqBC,WAAW,EAAE,MAAK,MAAM,EAAE;QACjDV,OAAO,CAACQ,IAAI,GAAG3B,EAAE,CAAC8B,SAAS,CAACd,YAAY,CAACW,IAAI,CAAC;OAC/C,MAAM;QACL,KAAK,IAAMI,GAAG,IAAIC,MAAM,CAACC,IAAI,CAACjB,YAAY,CAACW,IAAI,CAAC,EAAE;UAChDT,GAAG,CAACgB,YAAY,CAACC,MAAM,CAACJ,GAAG,EAAEf,YAAY,CAACW,IAAI,CAACI,GAAG,CAAC,CAAC;;;;IAK1D,IAAIR,cAAc,IAAI,EAAE,QAAQ,IAAIJ,OAAO,CAACG,OAAO,CAAC,EAAE;MAEpDH,OAAO,CAACG,OAAO,CAAC,QAAQ,CAAC,GAAG,2CAA2C;;IAIzE,IAAMc,YAAY,GAAGlB,GAAG,CAACmB,QAAQ,EAAE,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEtD,IAAMC,QAAQ,SAASC,KAAK,CAACJ,YAAY,EAAEjB,OAAO,CAAC;IAEnD,IAAMsB,WAAW,GAAGF,QAAQ,CAACjB,OAAO,CAACoB,GAAG,CAAC,cAAc,CAAC;IACxD,IAAInB,cAAc,IAAIkB,WAAW,YAAXA,WAAW,CAAEE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;MAC/D,OAAOJ,QAAQ,CAACK,IAAI,EAAE;;IAGxB,OAAOL,QAAQ,CAACM,IAAI,EAAE;EACxB,CAAC;EAAA,OAAAlC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}