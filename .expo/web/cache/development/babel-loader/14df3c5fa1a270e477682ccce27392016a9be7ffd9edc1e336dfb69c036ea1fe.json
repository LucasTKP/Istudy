{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport { ContinousBaseGesture } from \"./gesture\";\nfunction changeEventCalculator(current, _previous) {\n  'worklet';\n\n  return current;\n}\nexport var ManualGesture = function (_ContinousBaseGesture) {\n  _inherits(ManualGesture, _ContinousBaseGesture);\n  function ManualGesture() {\n    var _this;\n    _classCallCheck(this, ManualGesture);\n    _this = _callSuper(this, ManualGesture);\n    _this.handlerName = 'ManualGestureHandler';\n    return _this;\n  }\n  _createClass(ManualGesture, [{\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.changeEventCalculator = changeEventCalculator;\n      return _get(_getPrototypeOf(ManualGesture.prototype), \"onChange\", this).call(this, callback);\n    }\n  }]);\n  return ManualGesture;\n}(ContinousBaseGesture);","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","_previous","ManualGesture","_ContinousBaseGesture","_inherits","_this","_classCallCheck","_callSuper","handlerName","_createClass","key","value","onChange","callback","handlers","_get","_getPrototypeOf","prototype","call"],"sources":["C:\\Users\\Lucas\\Desktop\\Projetos\\Istudy\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\manualGesture.ts"],"sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"],"mappings":";;;;;;;;AACA,SAASA,oBAAT;AAEA,SAASC,qBAATA,CACEC,OADF,EAEEC,SAFF,EAGE;EACA;;EACA,OAAOD,OAAP;AACD;AAED,WAAaE,aAAN,aAAAC,qBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,qBAAA;EAIL,SAAAD,cAAA,EAAc;IAAA,IAAAG,KAAA;IAAAC,eAAA,OAAAJ,aAAA;IACZG,KAAA,GAAAE,UAAA,OAAAL,aAAA;IAEAG,KAAA,CAAKG,WAAL,GAAmB,sBAAnB;IAAA,OAAAH,KAAA;EACD;EAAAI,YAAA,CAAAP,aAAA;IAAAQ,GAAA;IAAAC,KAAA,EAED,SAAAC,SACEC,QADM,EAEN;MAEA,KAAKC,QAAL,CAAcf,qBAAd,GAAsCA,qBAAtC;MACA,OAAAgB,IAAA,CAAAC,eAAA,CAAAd,aAAA,CAAAe,SAAA,qBAAAC,IAAA,OAAsBL,QAAf;IACR;EAAA;EAAA,OAAAX,aAAA;AAAA,EAhBgCJ,oBAA5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}