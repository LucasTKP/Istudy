{"ast":null,"code":"import XDate from 'xdate';\nimport React, { useCallback, useMemo } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TEXT_LINE_HEIGHT = 17;\nvar EVENT_DEFAULT_COLOR = '#add8e6';\nvar EventBlock = function EventBlock(props) {\n  var index = props.index,\n    event = props.event,\n    renderEvent = props.renderEvent,\n    onPress = props.onPress,\n    format24h = props.format24h,\n    styles = props.styles;\n  var numberOfLines = Math.floor(event.height / TEXT_LINE_HEIGHT);\n  var formatTime = format24h ? 'HH:mm' : 'hh:mm A';\n  var eventStyle = useMemo(function () {\n    return {\n      left: event.left,\n      height: event.height,\n      width: event.width,\n      top: event.top,\n      backgroundColor: event.color ? event.color : EVENT_DEFAULT_COLOR\n    };\n  }, [event]);\n  var _onPress = useCallback(function () {\n    onPress(index);\n  }, [index, onPress]);\n  return _jsx(TouchableOpacity, {\n    activeOpacity: 0.9,\n    onPress: _onPress,\n    style: [styles.event, eventStyle],\n    children: renderEvent ? renderEvent(event) : _jsxs(View, {\n      children: [_jsx(Text, {\n        numberOfLines: 1,\n        style: styles.eventTitle,\n        children: event.title || 'Event'\n      }), numberOfLines > 1 ? _jsx(Text, {\n        numberOfLines: numberOfLines - 1,\n        style: [styles.eventSummary],\n        children: event.summary || ' '\n      }) : null, numberOfLines > 2 ? _jsxs(Text, {\n        style: styles.eventTimes,\n        numberOfLines: 1,\n        children: [new XDate(event.start).toString(formatTime), \" - \", new XDate(event.end).toString(formatTime)]\n      }) : null]\n    })\n  });\n};\nexport default EventBlock;","map":{"version":3,"names":["XDate","React","useCallback","useMemo","View","Text","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","TEXT_LINE_HEIGHT","EVENT_DEFAULT_COLOR","EventBlock","props","index","event","renderEvent","onPress","format24h","styles","numberOfLines","Math","floor","height","formatTime","eventStyle","left","width","top","backgroundColor","color","_onPress","activeOpacity","style","children","eventTitle","title","eventSummary","summary","eventTimes","start","toString","end"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/node_modules/react-native-calendars/src/timeline/EventBlock.js"],"sourcesContent":["import XDate from 'xdate';\nimport React, { useCallback, useMemo } from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nconst TEXT_LINE_HEIGHT = 17;\nconst EVENT_DEFAULT_COLOR = '#add8e6';\nconst EventBlock = (props) => {\n    const { index, event, renderEvent, onPress, format24h, styles } = props;\n    // Fixing the number of lines for the event title makes this calculation easier.\n    // However it would make sense to overflow the title to a new line if needed\n    const numberOfLines = Math.floor(event.height / TEXT_LINE_HEIGHT);\n    const formatTime = format24h ? 'HH:mm' : 'hh:mm A';\n    const eventStyle = useMemo(() => {\n        return {\n            left: event.left,\n            height: event.height,\n            width: event.width,\n            top: event.top,\n            backgroundColor: event.color ? event.color : EVENT_DEFAULT_COLOR\n        };\n    }, [event]);\n    const _onPress = useCallback(() => {\n        onPress(index);\n    }, [index, onPress]);\n    return (<TouchableOpacity activeOpacity={0.9} onPress={_onPress} style={[styles.event, eventStyle]}>\n      {renderEvent ? (renderEvent(event)) : (<View>\n          <Text numberOfLines={1} style={styles.eventTitle}>\n            {event.title || 'Event'}\n          </Text>\n          {numberOfLines > 1 ? (<Text numberOfLines={numberOfLines - 1} style={[styles.eventSummary]}>\n              {event.summary || ' '}\n            </Text>) : null}\n          {numberOfLines > 2 ? (<Text style={styles.eventTimes} numberOfLines={1}>\n              {new XDate(event.start).toString(formatTime)} - {new XDate(event.end).toString(formatTime)}\n            </Text>) : null}\n        </View>)}\n    </TouchableOpacity>);\n};\nexport default EventBlock;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,gBAAgB,GAAG,EAAE;AAC3B,IAAMC,mBAAmB,GAAG,SAAS;AACrC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;EAC1B,IAAQC,KAAK,GAAqDD,KAAK,CAA/DC,KAAK;IAAEC,KAAK,GAA8CF,KAAK,CAAxDE,KAAK;IAAEC,WAAW,GAAiCH,KAAK,CAAjDG,WAAW;IAAEC,OAAO,GAAwBJ,KAAK,CAApCI,OAAO;IAAEC,SAAS,GAAaL,KAAK,CAA3BK,SAAS;IAAEC,MAAM,GAAKN,KAAK,CAAhBM,MAAM;EAG7D,IAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACP,KAAK,CAACQ,MAAM,GAAGb,gBAAgB,CAAC;EACjE,IAAMc,UAAU,GAAGN,SAAS,GAAG,OAAO,GAAG,SAAS;EAClD,IAAMO,UAAU,GAAGvB,OAAO,CAAC,YAAM;IAC7B,OAAO;MACHwB,IAAI,EAAEX,KAAK,CAACW,IAAI;MAChBH,MAAM,EAAER,KAAK,CAACQ,MAAM;MACpBI,KAAK,EAAEZ,KAAK,CAACY,KAAK;MAClBC,GAAG,EAAEb,KAAK,CAACa,GAAG;MACdC,eAAe,EAAEd,KAAK,CAACe,KAAK,GAAGf,KAAK,CAACe,KAAK,GAAGnB;IACjD,CAAC;EACL,CAAC,EAAE,CAACI,KAAK,CAAC,CAAC;EACX,IAAMgB,QAAQ,GAAG9B,WAAW,CAAC,YAAM;IAC/BgB,OAAO,CAACH,KAAK,CAAC;EAClB,CAAC,EAAE,CAACA,KAAK,EAAEG,OAAO,CAAC,CAAC;EACpB,OAAQV,IAAA,CAACF,gBAAgB;IAAC2B,aAAa,EAAE,GAAI;IAACf,OAAO,EAAEc,QAAS;IAACE,KAAK,EAAE,CAACd,MAAM,CAACJ,KAAK,EAAEU,UAAU,CAAE;IAAAS,QAAA,EAChGlB,WAAW,GAAIA,WAAW,CAACD,KAAK,CAAC,GAAKN,KAAA,CAACN,IAAI;MAAA+B,QAAA,GACxC3B,IAAA,CAACH,IAAI;QAACgB,aAAa,EAAE,CAAE;QAACa,KAAK,EAAEd,MAAM,CAACgB,UAAW;QAAAD,QAAA,EAC9CnB,KAAK,CAACqB,KAAK,IAAI;MAAO,CACnB,CAAC,EACNhB,aAAa,GAAG,CAAC,GAAIb,IAAA,CAACH,IAAI;QAACgB,aAAa,EAAEA,aAAa,GAAG,CAAE;QAACa,KAAK,EAAE,CAACd,MAAM,CAACkB,YAAY,CAAE;QAAAH,QAAA,EACtFnB,KAAK,CAACuB,OAAO,IAAI;MAAG,CACjB,CAAC,GAAI,IAAI,EAChBlB,aAAa,GAAG,CAAC,GAAIX,KAAA,CAACL,IAAI;QAAC6B,KAAK,EAAEd,MAAM,CAACoB,UAAW;QAACnB,aAAa,EAAE,CAAE;QAAAc,QAAA,GAClE,IAAInC,KAAK,CAACgB,KAAK,CAACyB,KAAK,CAAC,CAACC,QAAQ,CAACjB,UAAU,CAAC,EAAC,KAAG,EAAC,IAAIzB,KAAK,CAACgB,KAAK,CAAC2B,GAAG,CAAC,CAACD,QAAQ,CAACjB,UAAU,CAAC;MAAA,CACtF,CAAC,GAAI,IAAI;IAAA,CACb;EAAE,CACM,CAAC;AACvB,CAAC;AACD,eAAeZ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}