{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport invariant from 'invariant';\nimport qs from 'qs';\nexport function buildQueryString(input) {\n  return qs.stringify(input);\n}\nexport function getQueryParams(url) {\n  var _parsedSearch$errorCo;\n  var parts = url.split('#');\n  var hash = parts[1];\n  var partsWithoutHash = parts[0].split('?');\n  var queryString = partsWithoutHash[partsWithoutHash.length - 1];\n  var parsedSearch = qs.parse(queryString, {\n    parseArrays: false\n  });\n  var errorCode = (_parsedSearch$errorCo = parsedSearch.errorCode) != null ? _parsedSearch$errorCo : null;\n  invariant(typeof errorCode === 'string' || errorCode === null, `The \"errorCode\" parameter must be a string if specified`);\n  delete parsedSearch.errorCode;\n  var parsedHash = {};\n  if (parts[1]) {\n    parsedHash = qs.parse(hash);\n  }\n  var params = _objectSpread(_objectSpread({}, parsedSearch), parsedHash);\n  return {\n    errorCode: errorCode,\n    params: params\n  };\n}","map":{"version":3,"names":["invariant","qs","buildQueryString","input","stringify","getQueryParams","url","_parsedSearch$errorCo","parts","split","hash","partsWithoutHash","queryString","length","parsedSearch","parse","parseArrays","errorCode","parsedHash","params","_objectSpread"],"sources":["C:\\Users\\Lucas\\Desktop\\Projetos\\Istudy\\node_modules\\expo-auth-session\\src\\QueryParams.ts"],"sourcesContent":["import invariant from 'invariant';\nimport qs from 'qs';\n\nexport function buildQueryString(input: Record<string, string>): string {\n  return qs.stringify(input);\n}\n\nexport function getQueryParams(url: string): {\n  errorCode: string | null;\n  params: { [key: string]: string };\n} {\n  const parts = url.split('#');\n  const hash = parts[1];\n  const partsWithoutHash = parts[0].split('?');\n  const queryString = partsWithoutHash[partsWithoutHash.length - 1];\n\n  // Get query string (?hello=world)\n  const parsedSearch = qs.parse(queryString, { parseArrays: false });\n\n  // Pull errorCode off of params\n  const errorCode = (parsedSearch.errorCode ?? null) as string | null;\n  invariant(\n    typeof errorCode === 'string' || errorCode === null,\n    `The \"errorCode\" parameter must be a string if specified`\n  );\n  delete parsedSearch.errorCode;\n\n  // Get hash (#abc=example)\n  let parsedHash = {};\n  if (parts[1]) {\n    parsedHash = qs.parse(hash);\n  }\n\n  // Merge search and hash\n  const params = {\n    ...parsedSearch,\n    ...parsedHash,\n  };\n\n  return {\n    errorCode,\n    params,\n  };\n}\n"],"mappings":";;;AAAA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAOC,EAAE,MAAM,IAAI;AAEnB,OAAM,SAAUC,gBAAgBA,CAACC,KAA6B;EAC5D,OAAOF,EAAE,CAACG,SAAS,CAACD,KAAK,CAAC;AAC5B;AAEA,OAAM,SAAUE,cAAcA,CAACC,GAAW;EAAA,IAAAC,qBAAA;EAIxC,IAAMC,KAAK,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;EAC5B,IAAMC,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC;EACrB,IAAMG,gBAAgB,GAAGH,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC;EAC5C,IAAMG,WAAW,GAAGD,gBAAgB,CAACA,gBAAgB,CAACE,MAAM,GAAG,CAAC,CAAC;EAGjE,IAAMC,YAAY,GAAGb,EAAE,CAACc,KAAK,CAACH,WAAW,EAAE;IAAEI,WAAW,EAAE;EAAK,CAAE,CAAC;EAGlE,IAAMC,SAAS,IAAAV,qBAAA,GAAIO,YAAY,CAACG,SAAS,YAAAV,qBAAA,GAAI,IAAsB;EACnEP,SAAS,CACP,OAAOiB,SAAS,KAAK,QAAQ,IAAIA,SAAS,KAAK,IAAI,EACnD,yDAAyD,CAC1D;EACD,OAAOH,YAAY,CAACG,SAAS;EAG7B,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAIV,KAAK,CAAC,CAAC,CAAC,EAAE;IACZU,UAAU,GAAGjB,EAAE,CAACc,KAAK,CAACL,IAAI,CAAC;;EAI7B,IAAMS,MAAM,GAAAC,aAAA,CAAAA,aAAA,KACPN,YAAY,GACZI,UAAU,CACd;EAED,OAAO;IACLD,SAAS,EAATA,SAAS;IACTE,MAAM,EAANA;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}