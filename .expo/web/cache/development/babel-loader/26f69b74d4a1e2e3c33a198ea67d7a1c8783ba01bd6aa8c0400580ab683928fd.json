{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React from 'react';\nvar Tab = createBottomTabNavigator();\nimport { CreateNewDeck } from \"../screens/CreateNewDeck\";\nimport { Tests } from \"../screens/Tests\";\nimport { Ranks } from \"../screens/Ranks\";\nimport { StackRoutes } from \"./Stack.routes\";\nimport { Decks } from \"../screens/Decks\";\nimport Home from \"../../assets/ImageNavBar/home.svg\";\nimport Pen from \"../../assets/ImageNavBar/pen.svg\";\nimport Books from \"../../assets/ImageNavBar/books.svg\";\nimport Rank from \"../../assets/ImageNavBar/rank.svg\";\nimport Calendar from \"../../assets/ImageNavBar/calendar.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function NavRoutes() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    actionBack = _React$useState2[0],\n    setActionBack = _React$useState2[1];\n  return _jsxs(Tab.Navigator, {\n    initialRouteName: \"StackHome\",\n    backBehavior: \"history\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          if (route.name === 'StackHome') {\n            setActionBack(false);\n            return _jsx(Home, {});\n          } else if (route.name === 'Criar') {\n            setActionBack(true);\n            return _jsx(Pen, {});\n          } else if (route.name === 'Seus') {\n            setActionBack(true);\n            return _jsx(Books, {});\n          } else if (route.name === 'Rank') {\n            setActionBack(true);\n            return _jsx(Rank, {});\n          } else if (route.name === 'Provas') {\n            setActionBack(true);\n            return _jsx(Calendar, {});\n          }\n        },\n        tabBarStyle: {\n          backgroundColor: '#91BDD8',\n          height: '9%'\n        },\n        tabBarLabelStyle: {\n          fontSize: 14,\n          marginTop: -10,\n          marginBottom: 5\n        },\n        tabBarHideOnKeyboard: \"true\",\n        tabBarActiveTintColor: '#4B82A3',\n        tabBarInactiveTintColor: '#23709D'\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Provas\",\n      component: Tests,\n      options: {\n        unmountOnBlur: true,\n        title: 'Provas',\n        headerTitleStyle: {\n          color: '#004973'\n        },\n        headerTintColor: '#FFF',\n        headerShown: true,\n        headerShadowVisible: false,\n        headerStyle: {\n          backgroundColor: '#004973',\n          borderWidth: 0,\n          height: 10\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Seus\",\n      component: Decks,\n      options: {\n        unmountOnBlur: true,\n        title: 'Seus',\n        headerTintColor: '#FFF',\n        headerShown: false,\n        headerShadowVisible: false,\n        headerStyle: {\n          backgroundColor: '#005483',\n          borderWidth: 0\n        }\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"StackHome\",\n      component: StackRoutes,\n      options: {\n        title: '',\n        headerTransparent: true,\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Criar\",\n      component: CreateNewDeck,\n      options: {\n        unmountOnBlur: true,\n        title: 'Criar',\n        headerTintColor: '#FFF',\n        headerShadowVisible: false,\n        headerStyle: {\n          backgroundColor: '#005483'\n        },\n        headerTitleStyle: {\n          color: '#005483'\n        },\n        unmountOnBlur: true\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Rank\",\n      component: Ranks,\n      options: {\n        title: 'Ranks',\n        headerTitleStyle: {\n          color: '#004973'\n        },\n        unmountOnBlur: true,\n        headerTintColor: '#FFF',\n        headerShadowVisible: false,\n        headerStyle: {\n          backgroundColor: '#004973',\n          borderWidth: 0\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["createBottomTabNavigator","React","Tab","CreateNewDeck","Tests","Ranks","StackRoutes","Decks","Home","Pen","Books","Rank","Calendar","jsx","_jsx","jsxs","_jsxs","NavRoutes","_React$useState","useState","_React$useState2","_slicedToArray","actionBack","setActionBack","Navigator","initialRouteName","backBehavior","screenOptions","_ref","route","tabBarIcon","_ref2","focused","name","tabBarStyle","backgroundColor","height","tabBarLabelStyle","fontSize","marginTop","marginBottom","tabBarHideOnKeyboard","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","component","options","unmountOnBlur","title","headerTitleStyle","color","headerTintColor","headerShown","headerShadowVisible","headerStyle","borderWidth","headerTransparent"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/src/routes/Navbar.routes.js"],"sourcesContent":["import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport React from 'react'\nconst Tab = createBottomTabNavigator()\n\nimport { CreateNewDeck } from '../screens/CreateNewDeck';\nimport { Tests } from '../screens/Tests';\nimport { Ranks } from '../screens/Ranks';\n\nimport { StackRoutes } from './Stack.routes'\n\nimport { Decks } from '../screens/Decks'\n\n\nimport Home from '../../assets/ImageNavBar/home.svg'\nimport Pen from '../../assets/ImageNavBar/pen.svg'\nimport Books from '../../assets/ImageNavBar/books.svg'\nimport Rank from '../../assets/ImageNavBar/rank.svg'\nimport Calendar from '../../assets/ImageNavBar/calendar.svg'\n\nexport function NavRoutes() {\n  const [actionBack, setActionBack] = React.useState(false)\n\n  \n  return (\n      <Tab.Navigator\n        initialRouteName=\"StackHome\"  \n        backBehavior='history'\n            screenOptions={({ route }) => ({\n                tabBarIcon: ({focused}) => {\n                    if (route.name === 'StackHome') {\n                      setActionBack(false)\n                      return <Home />\n                    } else if (route.name === 'Criar') {\n                        setActionBack(true)\n                        return <Pen />\n                    } else if (route.name === 'Seus') {\n                        setActionBack(true)\n                        return <Books />\n                    } else if (route.name === 'Rank') {\n                        setActionBack(true)\n                        return <Rank />\n                    } else if (route.name === 'Provas') {\n                        setActionBack(true)\n                        return<Calendar />\n                    }\n                },\n                tabBarStyle: {\n                    backgroundColor: '#91BDD8',\n                    height: '9%',\n                },\n                tabBarLabelStyle: {\n                    fontSize: 14,\n                    marginTop: -10,\n                    marginBottom: 5\n                }, \n                tabBarHideOnKeyboard:\"true\",\n                tabBarActiveTintColor: '#4B82A3',\n                tabBarInactiveTintColor: '#23709D',\n            }\n        )}\n      >\n\n      <Tab.Screen\n          name=\"Provas\"\n          component={Tests}\n          options={{\n            unmountOnBlur: true,\n            title: 'Provas',\n            headerTitleStyle: {color: '#004973'},\n            headerTintColor: '#FFF',\n            headerShown: true,\n            headerShadowVisible: false,\n            headerStyle: {backgroundColor: '#004973', borderWidth:0, height: 10},\n          }}\n        />\n        \n        <Tab.Screen\n            name=\"Seus\"\n            component={Decks}\n            options={{\n              unmountOnBlur: true,\n              title: 'Seus',\n              headerTintColor: '#FFF',\n              headerShown: false,\n              headerShadowVisible: false,\n              headerStyle: {backgroundColor: '#005483', borderWidth:0},\n            }}\n          />  \n          \n\n        <Tab.Screen\n          name=\"StackHome\"\n          component={StackRoutes}\n          options={{\n            title: '',\n            headerTransparent: true,\n            headerShown: false\n          }}\n        />\n\n        <Tab.Screen\n          name=\"Criar\"\n          component={CreateNewDeck}\n          options={{\n            unmountOnBlur: true,\n            title: 'Criar',\n            headerTintColor: '#FFF',\n            headerShadowVisible: false,\n            headerStyle: {backgroundColor: '#005483'},\n            headerTitleStyle: {color: '#005483'},\n            unmountOnBlur: true,\n          }}\n          />\n\n        <Tab.Screen\n          name=\"Rank\"\n          component={Ranks}\n          options={{\n            title: 'Ranks',\n            headerTitleStyle: {color: '#004973'},\n            unmountOnBlur: true,\n            headerTintColor: '#FFF',\n            headerShadowVisible: false,\n            headerStyle: {backgroundColor: '#004973', borderWidth:0},\n          }}\n        />  \n\n      </ Tab.Navigator>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}