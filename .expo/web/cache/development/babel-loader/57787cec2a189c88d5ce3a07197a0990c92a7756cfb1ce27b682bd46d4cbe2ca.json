{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Br } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport useAxios from \"../hooks/useAxios\";\nimport Loading from \"../components/Loading\";\nimport IconRank from \"../../assets/ImagePages/rank.svg\";\nimport IconTrophy from \"../../assets/ImageIcons/iconTrophy.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport function Ranks() {\n  var _useAxios = useAxios(),\n    callAxios = _useAxios.callAxios,\n    answerAxios = _useAxios.answerAxios;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    visible = _useState2[0],\n    setVisible = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    show = _useState4[0],\n    setShow = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    position = _useState6[0],\n    setPosition = _useState6[1];\n  function next() {\n    setPosition(position + 1);\n  }\n  useEffect(function () {\n    if (answerAxios[0]) {\n      setShow(true);\n      console.log(answerAxios);\n    }\n  }, [answerAxios]);\n  useEffect(function () {\n    GetRanks();\n  }, []);\n  function GetRanks() {\n    return _GetRanks.apply(this, arguments);\n  }\n  function _GetRanks() {\n    _GetRanks = _asyncToGenerator(function* () {\n      try {\n        var data = {};\n        setVisible(true);\n        yield callAxios(\"user/top\", data, \"get\");\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setVisible(false);\n      }\n    });\n    return _GetRanks.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    style: {\n      backgroundColor: '#004973',\n      height: '100%',\n      width: '100%'\n    },\n    children: [_jsx(Loading, {\n      visible: visible\n    }), _jsx(ScrollView, {\n      contentContainerStyle: {\n        alignItems: 'center'\n      },\n      children: _jsxs(View, {\n        style: {\n          width: '80%',\n          alignItems: 'center'\n        },\n        children: [_jsxs(View, {\n          style: {\n            width: '100%',\n            flexDirection: 'row',\n            justifyContent: 'space-between'\n          },\n          children: [_jsxs(View, {\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 30,\n                fontWeight: '500',\n                color: '#fff'\n              },\n              children: \"Ranks\"\n            }), _jsxs(Text, {\n              style: {\n                fontSize: 15,\n                fontWeight: '400',\n                color: '#91BDD8',\n                marginTop: 15\n              },\n              children: [\"Os maiores vencedores \", '\\n', \" de nossos flashcards!\"]\n            })]\n          }), _jsx(IconRank, {})]\n        }), _jsx(View, {\n          style: styles.BoxRanks,\n          children: show ? answerAxios.map(function (player, index) {\n            return _jsxs(_Fragment, {\n              children: [_jsx(View, {\n                style: styles.DetailsBoxRanks\n              }), _jsxs(View, {\n                style: styles.ContentPlayer,\n                children: [_jsxs(Text, {\n                  style: styles.NumberRank,\n                  children: [index + 1, \"\\xBA\"]\n                }), _jsx(Text, {\n                  style: styles.NamePlayer,\n                  children: player.user.name\n                }), _jsxs(View, {\n                  style: styles.DivPoints,\n                  children: [_jsx(IconTrophy, {}), _jsx(Text, {\n                    style: styles.NumberPoins,\n                    children: player.wins\n                  })]\n                })]\n              }), _jsx(View, {\n                style: {\n                  height: 3,\n                  width: '100%',\n                  backgroundColor: '#004973'\n                }\n              })]\n            });\n          }) : _jsx(_Fragment, {})\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  BoxRanks: {\n    width: 280,\n    height: 400,\n    backgroundColor: '#006299',\n    borderRadius: 12,\n    marginTop: 75\n  },\n  DetailsBoxRanks: {\n    height: '100%',\n    width: 4,\n    backgroundColor: '#004973',\n    position: 'absolute',\n    left: 50\n  },\n  ContentPlayer: {\n    flexDirection: 'row',\n    width: '90%',\n    height: '9.3%',\n    alignSelf: 'center',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  DivPosition: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '55%',\n    justifyContent: 'space-between'\n  },\n  DivPoints: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '23%',\n    justifyContent: 'space-between'\n  },\n  NamePlayer: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#7BACC9',\n    width: '50%'\n  },\n  NumberRank: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#7BACC9',\n    width: '20%'\n  },\n  NumberPoins: {\n    fontSize: 18,\n    fontWeight: '500',\n    color: '#7BACC9'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","Text","View","StyleSheet","Image","Br","TouchableOpacity","TextInput","ScrollView","useAxios","Loading","IconRank","IconTrophy","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Ranks","_useAxios","callAxios","answerAxios","_useState","_useState2","_slicedToArray","visible","setVisible","_useState3","_useState4","show","setShow","_useState5","_useState6","position","setPosition","next","console","log","GetRanks","_GetRanks","apply","arguments","_asyncToGenerator","data","e","style","backgroundColor","height","width","children","contentContainerStyle","alignItems","flexDirection","justifyContent","fontSize","fontWeight","color","marginTop","styles","BoxRanks","map","player","index","DetailsBoxRanks","ContentPlayer","NumberRank","NamePlayer","user","name","DivPoints","NumberPoins","wins","create","borderRadius","left","alignSelf","DivPosition"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/src/screens/Ranks.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Text, View, StyleSheet, Image, Br , TouchableOpacity, TextInput, ScrollView} from 'react-native';\nimport useAxios from '../hooks/useAxios'\nimport Loading from '../components/Loading'\nimport IconRank from '../../assets/ImagePages/rank.svg';\nimport IconTrophy from '../../assets/ImageIcons/iconTrophy.svg';\n\nexport function Ranks() {\n    const {callAxios, answerAxios} = useAxios()\n    const [visible, setVisible] = useState(false)\n    const [show, setShow] = useState(false)\n    const [position, setPosition] = useState(0)\n\n    function next(){\n        setPosition(position + 1)\n    }\n\n    useEffect(() => {\n        if(answerAxios[0]){\n            setShow(true)\n            console.log(answerAxios)\n        }\n    },[answerAxios])\n    useEffect(() => {\n        GetRanks()\n    },[])\n\n    async function GetRanks(){\n        try{\n            const data = {\n            }\n            setVisible(true)\n            await callAxios (\"user/top\", data, \"get\")\n        }catch(e){\n            console.log(e)\n        }finally{\n            setVisible(false)\n        }\n    }\n  return (\n    <View style={{backgroundColor:'#004973', height:'100%', width:'100%'}}>\n        <Loading visible={visible}/>\n        <ScrollView contentContainerStyle={{alignItems: 'center'}}>\n            <View style={{width:'80%', alignItems: 'center'}}>\n                <View style={{width: '100%', flexDirection: 'row',justifyContent: 'space-between'}}>\n                    <View>\n                        <Text style={{fontSize:30, fontWeight:'500', color:'#fff'}}>Ranks</Text>\n                        <Text style={{fontSize: 15, fontWeight: '400', color: '#91BDD8', marginTop: 15}}>Os maiores vencedores {'\\n'} de nossos flashcards!</Text>\n                    </View>\n                    <IconRank />\n                </View>\n                \n                <View style={styles.BoxRanks}>\n                    {show ? answerAxios.map((player, index) =>{\n                        return (\n                            <>\n                    <View style={styles.DetailsBoxRanks}></View>\n                    <View style={styles.ContentPlayer}>\n                            <Text style={styles.NumberRank}>{index + 1}ยบ</Text>\n                            <Text style={styles.NamePlayer}>{player.user.name}</Text>\n                        <View style={styles.DivPoints}>\n                            <IconTrophy />\n                            <Text style={styles.NumberPoins}>{player.wins}</Text>\n                        </View>\n                    </View>\n                    <View style={{height: 3, width: '100%', backgroundColor: '#004973'}}></View>\n                    </>\n                        )\n                    }) : <></>}\n                    \n                </View>\n            </View>\n        </ScrollView>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n    BoxRanks: {\n        width: 280, \n        height: 400, \n        backgroundColor: '#006299', \n        borderRadius: 12, \n        marginTop: 75\n    },\n    DetailsBoxRanks: {\n        height: '100%', \n        width: 4, \n        backgroundColor: '#004973', \n        position: 'absolute', \n        left: 50\n    },\n    ContentPlayer: {\n        flexDirection: 'row', \n        width: '90%', \n        height: '9.3%', \n        alignSelf: 'center', \n        justifyContent: 'space-between', \n        alignItems: 'center'\n    },\n    DivPosition: {\n        flexDirection: 'row', \n        alignItems: 'center', \n        width: '55%', \n        justifyContent: 'space-between'\n    },\n    DivPoints: {\n        flexDirection: 'row', \n        alignItems: 'center', \n        width: '23%', \n        justifyContent: 'space-between'\n    },\n    NamePlayer: {\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#7BACC9',\n         width: '50%'\n    }, \n    NumberRank: {\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#7BACC9',\n         width: '20%'\n    }, \n    NumberPoins: {\n        fontSize: 18,\n        fontWeight: '500',\n        color: '#7BACC9',\n    }, \n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}