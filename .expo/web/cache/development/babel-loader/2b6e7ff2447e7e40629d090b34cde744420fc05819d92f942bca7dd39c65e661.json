{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from 'prop-types';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport InfiniteList from \"../infinite-list\";\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDidUpdate } from \"../hooks\";\nimport { getMoment } from \"../momentResolver\";\nimport { isGTE, isToday } from \"../dateutils\";\nimport { getDefaultLocale } from \"../services\";\nimport { UpdateSources, todayString } from \"./commons\";\nimport styleConstructor from \"./style\";\nimport Context from \"./Context\";\nimport constants from \"../commons/constants\";\nimport { parseDate } from \"../interface\";\nimport { LayoutProvider } from \"recyclerlistview/dist/reactnative/core/dependencies/LayoutProvider\";\nimport { AgendaSectionHeader } from \"./AgendaListsCommon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar InfiniteAgendaList = function InfiniteAgendaList(props) {\n  var _sections$, _infiniteListProps$vi;\n  var theme = props.theme,\n    sections = props.sections,\n    scrollToNextEvent = props.scrollToNextEvent,\n    avoidDateUpdates = props.avoidDateUpdates,\n    onScroll = props.onScroll,\n    renderSectionHeader = props.renderSectionHeader,\n    sectionStyle = props.sectionStyle,\n    dayFormatter = props.dayFormatter,\n    _props$dayFormat = props.dayFormat,\n    dayFormat = _props$dayFormat === void 0 ? 'dddd, MMM d' : _props$dayFormat,\n    useMoment = props.useMoment,\n    _props$markToday = props.markToday,\n    markToday = _props$markToday === void 0 ? true : _props$markToday,\n    infiniteListProps = props.infiniteListProps,\n    renderItem = props.renderItem,\n    onEndReached = props.onEndReached,\n    onEndReachedThreshold = props.onEndReachedThreshold,\n    refreshControl = props.refreshControl;\n  var _useContext = useContext(Context),\n    date = _useContext.date,\n    updateSource = _useContext.updateSource,\n    setDate = _useContext.setDate;\n  var style = useRef(styleConstructor(theme));\n  var list = useRef();\n  var _topSection = useRef((_sections$ = sections[0]) == null ? void 0 : _sections$.title);\n  var didScroll = useRef(false);\n  var sectionScroll = useRef(false);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var dataRef = useRef(data);\n  useEffect(function () {\n    var items = sections.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), [{\n        title: cur.title,\n        isTitle: true\n      }], _toConsumableArray(cur.data));\n    }, []);\n    setData(items);\n    dataRef.current = items;\n    if (date !== _topSection.current) {\n      setTimeout(function () {\n        scrollToSection(date);\n      }, 500);\n    }\n  }, [sections]);\n  useDidUpdate(function () {\n    if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n      scrollToSection(date);\n    }\n  }, [date]);\n  var getSectionIndex = function getSectionIndex(date) {\n    var dataIndex = 0;\n    for (var i = 0; i < sections.length; i++) {\n      if (sections[i].title === date) {\n        return dataIndex;\n      }\n      dataIndex += sections[i].data.length + 1;\n    }\n  };\n  var getNextSectionIndex = function getNextSectionIndex(date) {\n    var cur = new XDate(date);\n    var dataIndex = 0;\n    for (var i = 0; i < sections.length; i++) {\n      var titleDate = parseDate(sections[i].title);\n      if (isGTE(titleDate, cur)) {\n        return dataIndex;\n      }\n      dataIndex += sections[i].data.length + 1;\n    }\n  };\n  var getSectionTitle = useCallback(function (title) {\n    if (!title) return;\n    var sectionTitle = title;\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        var moment = getMoment();\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = new XDate(title).toString(dayFormat);\n      }\n    }\n    if (markToday) {\n      var string = getDefaultLocale().today || todayString;\n      var today = isToday(title);\n      sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n    }\n    return sectionTitle;\n  }, []);\n  var scrollToSection = useCallback(debounce(function (requestedDate) {\n    var sectionIndex = scrollToNextEvent ? getNextSectionIndex(requestedDate) : getSectionIndex(requestedDate);\n    if (isUndefined(sectionIndex)) {\n      return;\n    }\n    if (list != null && list.current && sectionIndex !== undefined) {\n      sectionScroll.current = true;\n      if (requestedDate !== _topSection.current) {\n        var _sections$findItemTit, _list$current;\n        _topSection.current = (_sections$findItemTit = sections[findItemTitleIndex(sectionIndex)]) == null ? void 0 : _sections$findItemTit.title;\n        (_list$current = list.current) == null ? void 0 : _list$current.scrollToIndex(sectionIndex, true);\n      }\n      setTimeout(function () {\n        _onMomentumScrollEnd();\n      }, 500);\n    }\n  }, 1000, {\n    leading: false,\n    trailing: true\n  }), [sections]);\n  var layoutProvider = useMemo(function () {\n    return new LayoutProvider(function (index) {\n      var _dataRef$current$inde;\n      return (_dataRef$current$inde = dataRef.current[index]) != null && _dataRef$current$inde.isTitle ? 'title' : 'page';\n    }, function (type, dim) {\n      var _infiniteListProps$ti, _infiniteListProps$it;\n      dim.width = constants.screenWidth;\n      dim.height = type === 'title' ? (_infiniteListProps$ti = infiniteListProps == null ? void 0 : infiniteListProps.titleHeight) != null ? _infiniteListProps$ti : 60 : (_infiniteListProps$it = infiniteListProps == null ? void 0 : infiniteListProps.itemHeight) != null ? _infiniteListProps$it : 80;\n    });\n  }, []);\n  var _onScroll = useCallback(function (rawEvent) {\n    if (!didScroll.current) {\n      didScroll.current = true;\n      scrollToSection.cancel();\n    }\n    var event = {\n      nativeEvent: {\n        contentOffset: rawEvent.nativeEvent.contentOffset,\n        layoutMeasurement: rawEvent.nativeEvent.layoutMeasurement,\n        contentSize: rawEvent.nativeEvent.contentSize\n      }\n    };\n    onScroll == null ? void 0 : onScroll(event);\n  }, [onScroll]);\n  var _onVisibleIndicesChanged = useCallback(debounce(function (all) {\n    if (all && all.length && !sectionScroll.current) {\n      var topItemIndex = all[0];\n      var topSection = data[findItemTitleIndex(topItemIndex)];\n      if (topSection && topSection !== _topSection.current) {\n        _topSection.current = topSection.title;\n        if (didScroll.current && !avoidDateUpdates) {\n          setDate == null ? void 0 : setDate(topSection.title, UpdateSources.LIST_DRAG);\n        }\n      }\n    }\n  }, (_infiniteListProps$vi = infiniteListProps == null ? void 0 : infiniteListProps.visibleIndicesChangedDebounce) != null ? _infiniteListProps$vi : 1000, {\n    leading: false,\n    trailing: true\n  }), [avoidDateUpdates, setDate, data]);\n  var findItemTitleIndex = useCallback(function (itemIndex) {\n    var titleIndex = itemIndex;\n    while (titleIndex > 0 && !((_data$titleIndex = data[titleIndex]) != null && _data$titleIndex.isTitle)) {\n      var _data$titleIndex;\n      titleIndex--;\n    }\n    return titleIndex;\n  }, [data]);\n  var _onMomentumScrollEnd = useCallback(function () {\n    sectionScroll.current = false;\n  }, []);\n  var headerTextStyle = useMemo(function () {\n    return [style.current.sectionText, sectionStyle];\n  }, [sectionStyle]);\n  var _renderSectionHeader = useCallback(function (info) {\n    var _info$section;\n    var title = info == null ? void 0 : (_info$section = info.section) == null ? void 0 : _info$section.title;\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n    var headerTitle = getSectionTitle(title);\n    return _jsx(AgendaSectionHeader, {\n      title: headerTitle,\n      style: headerTextStyle\n    });\n  }, [headerTextStyle]);\n  var _renderItem = useCallback(function (_type, item) {\n    if (item != null && item.isTitle) {\n      return _renderSectionHeader({\n        section: item\n      });\n    }\n    if (renderItem) {\n      return renderItem({\n        item: item\n      });\n    }\n    return _jsx(_Fragment, {});\n  }, [renderItem]);\n  var _onEndReached = useCallback(function () {\n    if (onEndReached) {\n      onEndReached({\n        distanceFromEnd: 0\n      });\n    }\n  }, [onEndReached]);\n  return _jsx(InfiniteList, {\n    ref: list,\n    renderItem: _renderItem,\n    data: data,\n    style: style.current.container,\n    layoutProvider: layoutProvider,\n    onScroll: _onScroll,\n    onVisibleIndicesChanged: _onVisibleIndicesChanged,\n    scrollViewProps: {\n      onMomentumScrollEnd: _onMomentumScrollEnd,\n      nestedScrollEnabled: true,\n      refreshControl: refreshControl\n    },\n    onEndReached: _onEndReached,\n    onEndReachedThreshold: onEndReachedThreshold,\n    disableScrollOnDataChange: true,\n    renderFooter: infiniteListProps == null ? void 0 : infiniteListProps.renderFooter\n  });\n};\nexport default InfiniteAgendaList;\nInfiniteAgendaList.displayName = 'InfiniteAgendaList';\nInfiniteAgendaList.propTypes = {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  avoidDateUpdates: PropTypes.bool\n};","map":{"version":3,"names":["PropTypes","isUndefined","debounce","InfiniteList","XDate","React","useCallback","useContext","useEffect","useMemo","useRef","useState","useDidUpdate","getMoment","isGTE","isToday","getDefaultLocale","UpdateSources","todayString","styleConstructor","Context","constants","parseDate","LayoutProvider","AgendaSectionHeader","jsx","_jsx","Fragment","_Fragment","InfiniteAgendaList","props","_sections$","_infiniteListProps$vi","theme","sections","scrollToNextEvent","avoidDateUpdates","onScroll","renderSectionHeader","sectionStyle","dayFormatter","_props$dayFormat","dayFormat","useMoment","_props$markToday","markToday","infiniteListProps","renderItem","onEndReached","onEndReachedThreshold","refreshControl","_useContext","date","updateSource","setDate","style","list","_topSection","title","didScroll","sectionScroll","_useState","_useState2","_slicedToArray","data","setData","dataRef","items","reduce","acc","cur","concat","_toConsumableArray","isTitle","current","setTimeout","scrollToSection","LIST_DRAG","CALENDAR_INIT","getSectionIndex","dataIndex","i","length","getNextSectionIndex","titleDate","getSectionTitle","sectionTitle","moment","format","toString","string","today","requestedDate","sectionIndex","undefined","_sections$findItemTit","_list$current","findItemTitleIndex","scrollToIndex","_onMomentumScrollEnd","leading","trailing","layoutProvider","index","_dataRef$current$inde","type","dim","_infiniteListProps$ti","_infiniteListProps$it","width","screenWidth","height","titleHeight","itemHeight","_onScroll","rawEvent","cancel","event","nativeEvent","contentOffset","layoutMeasurement","contentSize","_onVisibleIndicesChanged","all","topItemIndex","topSection","visibleIndicesChangedDebounce","itemIndex","titleIndex","_data$titleIndex","headerTextStyle","sectionText","_renderSectionHeader","info","_info$section","section","headerTitle","_renderItem","_type","item","_onEndReached","distanceFromEnd","ref","container","onVisibleIndicesChanged","scrollViewProps","onMomentumScrollEnd","nestedScrollEnabled","disableScrollOnDataChange","renderFooter","displayName","propTypes","func","bool","oneOfType","object","number","array"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/node_modules/react-native-calendars/src/expandableCalendar/infiniteAgendaList.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport isUndefined from 'lodash/isUndefined';\nimport debounce from 'lodash/debounce';\nimport InfiniteList from '../infinite-list';\nimport XDate from 'xdate';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { useDidUpdate } from '../hooks';\nimport { getMoment } from '../momentResolver';\nimport { isGTE, isToday } from '../dateutils';\nimport { getDefaultLocale } from '../services';\nimport { UpdateSources, todayString } from './commons';\nimport styleConstructor from './style';\nimport Context from './Context';\nimport constants from \"../commons/constants\";\nimport { parseDate } from \"../interface\";\nimport { LayoutProvider } from \"recyclerlistview/dist/reactnative/core/dependencies/LayoutProvider\";\nimport { AgendaSectionHeader } from \"./AgendaListsCommon\";\n/**\n * @description: AgendaList component that use InfiniteList to improve performance\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: InfiniteList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nconst InfiniteAgendaList = (props) => {\n    const { theme, sections, scrollToNextEvent, avoidDateUpdates, onScroll, renderSectionHeader, sectionStyle, dayFormatter, dayFormat = 'dddd, MMM d', useMoment, markToday = true, infiniteListProps, renderItem, onEndReached, onEndReachedThreshold, refreshControl } = props;\n    const { date, updateSource, setDate } = useContext(Context);\n    const style = useRef(styleConstructor(theme));\n    const list = useRef();\n    const _topSection = useRef(sections[0]?.title);\n    const didScroll = useRef(false);\n    const sectionScroll = useRef(false);\n    const [data, setData] = useState([]);\n    const dataRef = useRef(data);\n    useEffect(() => {\n        const items = sections.reduce((acc, cur) => {\n            return [...acc, { title: cur.title, isTitle: true }, ...cur.data];\n        }, []);\n        setData(items);\n        dataRef.current = items;\n        if (date !== _topSection.current) {\n            setTimeout(() => {\n                scrollToSection(date);\n            }, 500);\n        }\n    }, [sections]);\n    useDidUpdate(() => {\n        // NOTE: on first init data should set first section to the current date!!!\n        if (updateSource !== UpdateSources.LIST_DRAG && updateSource !== UpdateSources.CALENDAR_INIT) {\n            scrollToSection(date);\n        }\n    }, [date]);\n    const getSectionIndex = (date) => {\n        let dataIndex = 0;\n        for (let i = 0; i < sections.length; i++) {\n            if (sections[i].title === date) {\n                return dataIndex;\n            }\n            dataIndex += sections[i].data.length + 1;\n        }\n    };\n    const getNextSectionIndex = (date) => {\n        const cur = new XDate(date);\n        let dataIndex = 0;\n        for (let i = 0; i < sections.length; i++) {\n            const titleDate = parseDate(sections[i].title);\n            if (isGTE(titleDate, cur)) {\n                return dataIndex;\n            }\n            dataIndex += sections[i].data.length + 1;\n        }\n    };\n    const getSectionTitle = useCallback((title) => {\n        if (!title)\n            return;\n        let sectionTitle = title;\n        if (dayFormatter) {\n            sectionTitle = dayFormatter(title);\n        }\n        else if (dayFormat) {\n            if (useMoment) {\n                const moment = getMoment();\n                sectionTitle = moment(title).format(dayFormat);\n            }\n            else {\n                sectionTitle = new XDate(title).toString(dayFormat);\n            }\n        }\n        if (markToday) {\n            const string = getDefaultLocale().today || todayString;\n            const today = isToday(title);\n            sectionTitle = today ? `${string}, ${sectionTitle}` : sectionTitle;\n        }\n        return sectionTitle;\n    }, []);\n    const scrollToSection = useCallback(debounce((requestedDate) => {\n        const sectionIndex = scrollToNextEvent ? getNextSectionIndex(requestedDate) : getSectionIndex(requestedDate);\n        if (isUndefined(sectionIndex)) {\n            return;\n        }\n        if (list?.current && sectionIndex !== undefined) {\n            sectionScroll.current = true; // to avoid setDate() in _onVisibleIndicesChanged\n            if (requestedDate !== _topSection.current) {\n                _topSection.current = sections[findItemTitleIndex(sectionIndex)]?.title;\n                list.current?.scrollToIndex(sectionIndex, true);\n            }\n            setTimeout(() => {\n                _onMomentumScrollEnd(); // the RecyclerListView doesn't trigger onMomentumScrollEnd when calling scrollToSection\n            }, 500);\n        }\n    }, 1000, { leading: false, trailing: true }), [sections]);\n    const layoutProvider = useMemo(() => new LayoutProvider((index) => dataRef.current[index]?.isTitle ? 'title' : 'page', (type, dim) => {\n        dim.width = constants.screenWidth;\n        dim.height = type === 'title' ? infiniteListProps?.titleHeight ?? 60 : infiniteListProps?.itemHeight ?? 80;\n    }), []);\n    const _onScroll = useCallback((rawEvent) => {\n        if (!didScroll.current) {\n            didScroll.current = true;\n            scrollToSection.cancel();\n        }\n        // Convert to a format similar to NativeSyntheticEvent<NativeScrollEvent>\n        const event = {\n            nativeEvent: {\n                contentOffset: rawEvent.nativeEvent.contentOffset,\n                layoutMeasurement: rawEvent.nativeEvent.layoutMeasurement,\n                contentSize: rawEvent.nativeEvent.contentSize,\n            },\n        };\n        onScroll?.(event);\n    }, [onScroll]);\n    const _onVisibleIndicesChanged = useCallback(debounce((all) => {\n        if (all && all.length && !sectionScroll.current) {\n            const topItemIndex = all[0];\n            const topSection = data[findItemTitleIndex(topItemIndex)];\n            if (topSection && topSection !== _topSection.current) {\n                _topSection.current = topSection.title;\n                if (didScroll.current && !avoidDateUpdates) {\n                    // to avoid setDate() on first load (while setting the initial context.date value)\n                    setDate?.(topSection.title, UpdateSources.LIST_DRAG);\n                }\n            }\n        }\n    }, infiniteListProps?.visibleIndicesChangedDebounce ?? 1000, { leading: false, trailing: true }), [avoidDateUpdates, setDate, data]);\n    const findItemTitleIndex = useCallback((itemIndex) => {\n        let titleIndex = itemIndex;\n        while (titleIndex > 0 && !data[titleIndex]?.isTitle) {\n            titleIndex--;\n        }\n        return titleIndex;\n    }, [data]);\n    const _onMomentumScrollEnd = useCallback(() => {\n        sectionScroll.current = false;\n    }, []);\n    const headerTextStyle = useMemo(() => [style.current.sectionText, sectionStyle], [sectionStyle]);\n    const _renderSectionHeader = useCallback((info) => {\n        const title = info?.section?.title;\n        if (renderSectionHeader) {\n            return renderSectionHeader(title);\n        }\n        const headerTitle = getSectionTitle(title);\n        return <AgendaSectionHeader title={headerTitle} style={headerTextStyle}/>;\n    }, [headerTextStyle]);\n    const _renderItem = useCallback((_type, item) => {\n        if (item?.isTitle) {\n            return _renderSectionHeader({ section: item });\n        }\n        if (renderItem) {\n            return renderItem({ item });\n        }\n        return <></>;\n    }, [renderItem]);\n    const _onEndReached = useCallback(() => {\n        if (onEndReached) {\n            onEndReached({ distanceFromEnd: 0 }); // The RecyclerListView doesn't provide the distanceFromEnd, so we just pass 0\n        }\n    }, [onEndReached]);\n    return (<InfiniteList ref={list} renderItem={_renderItem} data={data} style={style.current.container} layoutProvider={layoutProvider} onScroll={_onScroll} onVisibleIndicesChanged={_onVisibleIndicesChanged} scrollViewProps={{ onMomentumScrollEnd: _onMomentumScrollEnd, nestedScrollEnabled: true, refreshControl }} onEndReached={_onEndReached} onEndReachedThreshold={onEndReachedThreshold} disableScrollOnDataChange renderFooter={infiniteListProps?.renderFooter}/>);\n};\nexport default InfiniteAgendaList;\nInfiniteAgendaList.displayName = 'InfiniteAgendaList';\nInfiniteAgendaList.propTypes = {\n    dayFormat: PropTypes.string,\n    dayFormatter: PropTypes.func,\n    useMoment: PropTypes.bool,\n    markToday: PropTypes.bool,\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    avoidDateUpdates: PropTypes.bool\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}