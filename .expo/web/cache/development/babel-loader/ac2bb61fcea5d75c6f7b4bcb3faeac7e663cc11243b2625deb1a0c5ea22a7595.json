{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nimport ScaleGestureDetector from \"../detectors/ScaleGestureDetector\";\nvar PinchGestureHandler = function (_GestureHandler) {\n  _inherits(PinchGestureHandler, _GestureHandler);\n  function PinchGestureHandler() {\n    var _this;\n    _classCallCheck(this, PinchGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, PinchGestureHandler, [].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"scale\", 1);\n    _defineProperty(_assertThisInitialized(_this), \"velocity\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"startingSpan\", 0);\n    _defineProperty(_assertThisInitialized(_this), \"spanSlop\", DEFAULT_TOUCH_SLOP);\n    _defineProperty(_assertThisInitialized(_this), \"scaleDetectorListener\", {\n      onScaleBegin: function onScaleBegin(detector) {\n        _this.startingSpan = detector.getCurrentSpan();\n        return true;\n      },\n      onScale: function onScale(detector) {\n        var prevScaleFactor = _this.scale;\n        _this.scale *= detector.getScaleFactor(_this.tracker.getTrackedPointersCount());\n        var delta = detector.getTimeDelta();\n        if (delta > 0) {\n          _this.velocity = (_this.scale - prevScaleFactor) / delta;\n        }\n        if (Math.abs(_this.startingSpan - detector.getCurrentSpan()) >= _this.spanSlop && _this.currentState === State.BEGAN) {\n          _this.activate();\n        }\n        return true;\n      },\n      onScaleEnd: function onScaleEnd(_detector) {}\n    });\n    _defineProperty(_assertThisInitialized(_this), \"scaleGestureDetector\", new ScaleGestureDetector(_this.scaleDetectorListener));\n    return _this;\n  }\n  _createClass(PinchGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.setShouldCancelWhenOutside(false);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {\n        focalX: this.scaleGestureDetector.getFocusX(),\n        focalY: this.scaleGestureDetector.getFocusY(),\n        velocity: this.velocity,\n        scale: this.scale\n      };\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tryBegin();\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.currentState !== State.ACTIVE) {\n        return;\n      }\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.currentState === State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.currentState === State.ACTIVE && this.tracker.getTrackedPointersCount() < 2) {\n        this.end();\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.tracker.getTrackedPointersCount() < 2) {\n        return;\n      }\n      this.tracker.track(event);\n      this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin() {\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n      this.resetProgress();\n      this.begin();\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      if (this.currentState !== State.ACTIVE) {\n        this.resetProgress();\n      }\n      _get(_getPrototypeOf(PinchGestureHandler.prototype), \"activate\", this).call(this, force);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      this.resetProgress();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.currentState === State.ACTIVE) {\n        return;\n      }\n      this.velocity = 0;\n      this.scale = 1;\n    }\n  }]);\n  return PinchGestureHandler;\n}(GestureHandler);\nexport { PinchGestureHandler as default };","map":{"version":3,"names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","ScaleGestureDetector","PinchGestureHandler","_GestureHandler","_inherits","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","_assertThisInitialized","onScaleBegin","detector","startingSpan","getCurrentSpan","onScale","prevScaleFactor","scale","getScaleFactor","tracker","getTrackedPointersCount","delta","getTimeDelta","velocity","Math","abs","spanSlop","currentState","BEGAN","activate","onScaleEnd","_detector","scaleDetectorListener","_createClass","key","value","init","ref","propsRef","_get","_getPrototypeOf","prototype","call","setShouldCancelWhenOutside","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","transformNativeEvent","focalX","scaleGestureDetector","getFocusX","focalY","getFocusY","onPointerDown","event","addToTracker","onPointerAdd","tryBegin","onTouchEvent","onPointerUp","removeFromTracker","pointerId","ACTIVE","end","fail","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","UNDETERMINED","resetProgress","begin","force","onReset","default"],"sources":["C:\\Users\\Lucas\\Desktop\\Projetos\\Istudy\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\PinchGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport ScaleGestureDetector, {\n  ScaleGestureListener,\n} from '../detectors/ScaleGestureDetector';\n\nexport default class PinchGestureHandler extends GestureHandler {\n  private scale = 1;\n  private velocity = 0;\n\n  private startingSpan = 0;\n  private spanSlop = DEFAULT_TOUCH_SLOP;\n\n  private scaleDetectorListener: ScaleGestureListener = {\n    onScaleBegin: (detector: ScaleGestureDetector): boolean => {\n      this.startingSpan = detector.getCurrentSpan();\n      return true;\n    },\n    onScale: (detector: ScaleGestureDetector): boolean => {\n      const prevScaleFactor: number = this.scale;\n      this.scale *= detector.getScaleFactor(\n        this.tracker.getTrackedPointersCount()\n      );\n\n      const delta = detector.getTimeDelta();\n      if (delta > 0) {\n        this.velocity = (this.scale - prevScaleFactor) / delta;\n      }\n\n      if (\n        Math.abs(this.startingSpan - detector.getCurrentSpan()) >=\n          this.spanSlop &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate();\n      }\n      return true;\n    },\n    onScaleEnd: (\n      _detector: ScaleGestureDetector\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n    ): void => {},\n  };\n\n  private scaleGestureDetector: ScaleGestureDetector = new ScaleGestureDetector(\n    this.scaleDetectorListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n  }\n\n  protected transformNativeEvent() {\n    return {\n      focalX: this.scaleGestureDetector.getFocusX(),\n      focalY: this.scaleGestureDetector.getFocusY(),\n      velocity: this.velocity,\n      scale: this.scale,\n    };\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.tryBegin();\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n    if (this.currentState !== State.ACTIVE) {\n      return;\n    }\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (\n      this.currentState === State.ACTIVE &&\n      this.tracker.getTrackedPointersCount() < 2\n    ) {\n      this.end();\n    }\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerMove(event);\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    if (this.tracker.getTrackedPointersCount() < 2) {\n      return;\n    }\n    this.tracker.track(event);\n\n    this.scaleGestureDetector.onTouchEvent(event, this.tracker);\n    super.onPointerOutOfBounds(event);\n  }\n\n  private tryBegin(): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n    this.begin();\n  }\n\n  public activate(force?: boolean): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(force);\n  }\n\n  protected onReset(): void {\n    this.resetProgress();\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n    this.velocity = 0;\n    this.scale = 1;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}