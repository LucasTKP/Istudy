{"ast":null,"code":"import { useCallback, useEffect } from 'react';\nexport default (function (props) {\n  var onChangeOffset = props.onChangeOffset,\n    scrollOffset = props.scrollOffset,\n    scrollViewRef = props.scrollViewRef;\n  useEffect(function () {\n    if (scrollOffset !== undefined) {\n      var _scrollViewRef$curren;\n      scrollViewRef == null ? void 0 : (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo({\n        y: scrollOffset,\n        animated: false\n      });\n    }\n  }, [scrollOffset]);\n  var onScrollEndDrag = useCallback(function (event) {\n    var _event$nativeEvent$ve;\n    var offset = event.nativeEvent.contentOffset.y;\n    var velocity = (_event$nativeEvent$ve = event.nativeEvent.velocity) == null ? void 0 : _event$nativeEvent$ve.y;\n    if (velocity === 0) {\n      onChangeOffset == null ? void 0 : onChangeOffset(offset);\n    }\n  }, []);\n  var onMomentumScrollEnd = useCallback(function (event) {\n    onChangeOffset == null ? void 0 : onChangeOffset(event.nativeEvent.contentOffset.y);\n  }, []);\n  return {\n    scrollEvents: {\n      onScrollEndDrag: onScrollEndDrag,\n      onMomentumScrollEnd: onMomentumScrollEnd\n    }\n  };\n});","map":{"version":3,"names":["useCallback","useEffect","props","onChangeOffset","scrollOffset","scrollViewRef","undefined","_scrollViewRef$curren","current","scrollTo","y","animated","onScrollEndDrag","event","_event$nativeEvent$ve","offset","nativeEvent","contentOffset","velocity","onMomentumScrollEnd","scrollEvents"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/node_modules/react-native-calendars/src/timeline/useTimelineOffset.js"],"sourcesContent":["import { useCallback, useEffect } from 'react';\nexport default (props) => {\n    const { onChangeOffset, scrollOffset, scrollViewRef } = props;\n    useEffect(() => {\n        // NOTE: The main reason for this feature is to sync the offset\n        // between all of the timelines in the TimelineList component\n        if (scrollOffset !== undefined) {\n            scrollViewRef?.current?.scrollTo({\n                y: scrollOffset,\n                animated: false\n            });\n        }\n    }, [scrollOffset]);\n    const onScrollEndDrag = useCallback((event) => {\n        const offset = event.nativeEvent.contentOffset.y;\n        const velocity = event.nativeEvent.velocity?.y;\n        if (velocity === 0) {\n            onChangeOffset?.(offset);\n        }\n    }, []);\n    const onMomentumScrollEnd = useCallback((event) => {\n        onChangeOffset?.(event.nativeEvent.contentOffset.y);\n    }, []);\n    return {\n        scrollEvents: {\n            onScrollEndDrag,\n            onMomentumScrollEnd\n        }\n    };\n};\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC9C,gBAAe,UAACC,KAAK,EAAK;EACtB,IAAQC,cAAc,GAAkCD,KAAK,CAArDC,cAAc;IAAEC,YAAY,GAAoBF,KAAK,CAArCE,YAAY;IAAEC,aAAa,GAAKH,KAAK,CAAvBG,aAAa;EACnDJ,SAAS,CAAC,YAAM;IAGZ,IAAIG,YAAY,KAAKE,SAAS,EAAE;MAAA,IAAAC,qBAAA;MAC5BF,aAAa,qBAAAE,qBAAA,GAAbF,aAAa,CAAEG,OAAO,qBAAtBD,qBAAA,CAAwBE,QAAQ,CAAC;QAC7BC,CAAC,EAAEN,YAAY;QACfO,QAAQ,EAAE;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACP,YAAY,CAAC,CAAC;EAClB,IAAMQ,eAAe,GAAGZ,WAAW,CAAC,UAACa,KAAK,EAAK;IAAA,IAAAC,qBAAA;IAC3C,IAAMC,MAAM,GAAGF,KAAK,CAACG,WAAW,CAACC,aAAa,CAACP,CAAC;IAChD,IAAMQ,QAAQ,IAAAJ,qBAAA,GAAGD,KAAK,CAACG,WAAW,CAACE,QAAQ,qBAA1BJ,qBAAA,CAA4BJ,CAAC;IAC9C,IAAIQ,QAAQ,KAAK,CAAC,EAAE;MAChBf,cAAc,oBAAdA,cAAc,CAAGY,MAAM,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EACN,IAAMI,mBAAmB,GAAGnB,WAAW,CAAC,UAACa,KAAK,EAAK;IAC/CV,cAAc,oBAAdA,cAAc,CAAGU,KAAK,CAACG,WAAW,CAACC,aAAa,CAACP,CAAC,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IACHU,YAAY,EAAE;MACVR,eAAe,EAAfA,eAAe;MACfO,mBAAmB,EAAnBA;IACJ;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}