{"ast":null,"code":"var _require = require(\"./dateutils\"),\n  isToday = _require.isToday,\n  isDateNotInRange = _require.isDateNotInRange,\n  sameMonth = _require.sameMonth;\nvar _require2 = require(\"./interface\"),\n  toMarkingFormat = _require2.toMarkingFormat;\nexport function getState(day, current, props, disableDaySelection) {\n  var _context$date;\n  var minDate = props.minDate,\n    maxDate = props.maxDate,\n    disabledByDefault = props.disabledByDefault,\n    context = props.context;\n  var state = '';\n  if (!disableDaySelection && ((_context$date = context == null ? void 0 : context.date) != null ? _context$date : toMarkingFormat(current)) === toMarkingFormat(day)) {\n    state = 'selected';\n  } else if (isToday(day)) {\n    state = 'today';\n  } else if (disabledByDefault) {\n    state = 'disabled';\n  } else if (isDateNotInRange(day, minDate, maxDate)) {\n    state = 'disabled';\n  } else if (!sameMonth(day, current)) {\n    state = 'disabled';\n  }\n  return state;\n}","map":{"version":3,"names":["_require","require","isToday","isDateNotInRange","sameMonth","_require2","toMarkingFormat","getState","day","current","props","disableDaySelection","_context$date","minDate","maxDate","disabledByDefault","context","state","date"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/node_modules/react-native-calendars/src/day-state-manager.js"],"sourcesContent":["const { isToday, isDateNotInRange, sameMonth } = require('./dateutils');\nconst { toMarkingFormat } = require('./interface');\nexport function getState(day, current, props, disableDaySelection) {\n    const { minDate, maxDate, disabledByDefault, context } = props;\n    let state = '';\n    if (!disableDaySelection && ((context?.date ?? toMarkingFormat(current)) === toMarkingFormat(day))) {\n        state = 'selected';\n    }\n    else if (isToday(day)) {\n        state = 'today';\n    }\n    else if (disabledByDefault) {\n        state = 'disabled';\n    }\n    else if (isDateNotInRange(day, minDate, maxDate)) {\n        state = 'disabled';\n    }\n    else if (!sameMonth(day, current)) {\n        state = 'disabled';\n    }\n    return state;\n}\n"],"mappings":"AAAA,IAAAA,QAAA,GAAiDC,OAAO,cAAc,CAAC;EAA/DC,OAAO,GAAAF,QAAA,CAAPE,OAAO;EAAEC,gBAAgB,GAAAH,QAAA,CAAhBG,gBAAgB;EAAEC,SAAS,GAAAJ,QAAA,CAATI,SAAS;AAC5C,IAAAC,SAAA,GAA4BJ,OAAO,cAAc,CAAC;EAA1CK,eAAe,GAAAD,SAAA,CAAfC,eAAe;AACvB,OAAO,SAASC,QAAQA,CAACC,GAAG,EAAEC,OAAO,EAAEC,KAAK,EAAEC,mBAAmB,EAAE;EAAA,IAAAC,aAAA;EAC/D,IAAQC,OAAO,GAA0CH,KAAK,CAAtDG,OAAO;IAAEC,OAAO,GAAiCJ,KAAK,CAA7CI,OAAO;IAAEC,iBAAiB,GAAcL,KAAK,CAApCK,iBAAiB;IAAEC,OAAO,GAAKN,KAAK,CAAjBM,OAAO;EACpD,IAAIC,KAAK,GAAG,EAAE;EACd,IAAI,CAACN,mBAAmB,IAAK,EAAAC,aAAA,GAACI,OAAO,oBAAPA,OAAO,CAAEE,IAAI,YAAAN,aAAA,GAAIN,eAAe,CAACG,OAAO,CAAC,MAAMH,eAAe,CAACE,GAAG,CAAE,EAAE;IAChGS,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAIf,OAAO,CAACM,GAAG,CAAC,EAAE;IACnBS,KAAK,GAAG,OAAO;EACnB,CAAC,MACI,IAAIF,iBAAiB,EAAE;IACxBE,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAId,gBAAgB,CAACK,GAAG,EAAEK,OAAO,EAAEC,OAAO,CAAC,EAAE;IAC9CG,KAAK,GAAG,UAAU;EACtB,CAAC,MACI,IAAI,CAACb,SAAS,CAACI,GAAG,EAAEC,OAAO,CAAC,EAAE;IAC/BQ,KAAK,GAAG,UAAU;EACtB;EACA,OAAOA,KAAK;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}