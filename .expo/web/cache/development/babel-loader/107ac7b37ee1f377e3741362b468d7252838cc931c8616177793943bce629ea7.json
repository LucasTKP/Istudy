{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { UserContext } from \"../../App\";\nimport useAxios from \"../hooks/useAxios\";\nimport Loading from \"../components/Loading\";\nimport BoxAlert from \"../components/BoxAlert\";\nimport { Octicons, Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EditAnswer(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState(route.params.answer),\n    _useState2 = _slicedToArray(_useState, 2),\n    answer = _useState2[0],\n    setAnswer = _useState2[1];\n  var _useState3 = useState(route.params.question),\n    _useState4 = _slicedToArray(_useState3, 2),\n    question = _useState4[0],\n    setQuestion = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var _useContext = useContext(UserContext),\n    setAlert = _useContext.setAlert;\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    visible = _useState8[0],\n    setVisible = _useState8[1];\n  var _useAxios = useAxios(),\n    callAxios = _useAxios.callAxios,\n    answerAxios = _useAxios.answerAxios;\n  useEffect(function () {\n    if (answerAxios.status === 200) {\n      navigation.navigate('EditDeck');\n    }\n  }, [answerAxios]);\n  function UpdateInfo() {\n    return _UpdateInfo.apply(this, arguments);\n  }\n  function _UpdateInfo() {\n    _UpdateInfo = _asyncToGenerator(function* () {\n      if (Validate()) {\n        try {\n          var data = {\n            \"question\": question,\n            \"answer\": answer\n          };\n          setVisible(true);\n          yield callAxios(\"cards/answer/\" + route.params.id, data, \"put\");\n        } catch (e) {\n          console.log(e);\n        } finally {\n          setVisible(false);\n        }\n      } else {\n        setMessage('Preencha os campos de pergunta e resposta');\n        setAlert(true);\n      }\n    });\n    return _UpdateInfo.apply(this, arguments);\n  }\n  function Validate() {\n    if (question != \"\" && answer != \"\") {\n      return true;\n    }\n    return false;\n  }\n  return _jsx(View, {\n    style: {\n      backgroundColor: '#005483',\n      height: '100%',\n      width: '100%'\n    },\n    children: _jsxs(ScrollView, {\n      contentContainerStyle: {\n        alignItems: 'center'\n      },\n      children: [_jsx(BoxAlert, {\n        message: message,\n        type: 'erro'\n      }), _jsx(Loading, {\n        visible: visible\n      }), _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          width: '80%'\n        },\n        children: _jsxs(View, {\n          children: [_jsx(Text, {\n            style: {\n              fontSize: 30,\n              color: '#fff',\n              paddingBottom: 20\n            },\n            children: \"Perguntas\"\n          }), _jsx(Text, {\n            style: {\n              fontSize: 20,\n              color: '#91BDD8',\n              width: 216\n            },\n            children: route.params.title\n          })]\n        })\n      }), _jsx(View, {\n        style: {\n          width: 291,\n          height: 168,\n          backgroundColor: '#23709D',\n          borderRadius: 30,\n          marginTop: 38,\n          alignItems: 'center'\n        },\n        children: _jsx(View, {\n          style: {\n            width: '90%'\n          },\n          children: _jsx(TextInput, {\n            onChangeText: function onChangeText(Text) {\n              return setQuestion(Text);\n            },\n            value: question,\n            placeholderTextColor: \"#91BDD8\",\n            multiline: true,\n            numberOfLines: 4,\n            placeholder: \"Pergunta\",\n            style: {\n              fontSize: 16,\n              fontWeight: '500',\n              color: '#fff'\n            }\n          })\n        })\n      }), _jsx(View, {\n        style: {\n          width: 291,\n          height: 190,\n          backgroundColor: '#7BACC9',\n          marginTop: -50,\n          borderRadius: 30,\n          alignItems: 'center',\n          zIndex: -1,\n          justifyContent: 'center'\n        },\n        children: _jsx(View, {\n          style: {\n            width: '90%'\n          },\n          children: _jsx(TextInput, {\n            onChangeText: function onChangeText(Text) {\n              return setAnswer(Text);\n            },\n            value: answer,\n            placeholderTextColor: \"#4B82A3\",\n            multiline: true,\n            numberOfLines: 4,\n            placeholder: \"Resposta\",\n            style: {\n              fontSize: 16,\n              fontWeight: '500',\n              color: '#fff'\n            }\n          })\n        })\n      }), _jsx(View, {\n        children: _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return UpdateInfo();\n          },\n          style: {\n            width: 82,\n            height: 52,\n            backgroundColor: '#005483',\n            justifyContent: 'center',\n            alignItems: 'center',\n            borderRadius: 20,\n            borderWidth: 2,\n            borderColor: '#91BDD8',\n            marginTop: 40\n          },\n          children: _jsx(Feather, {\n            name: \"save\",\n            size: 30,\n            color: \"#7BACC9\"\n          })\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","useState","useEffect","Text","View","StyleSheet","Image","TouchableOpacity","TextInput","ScrollView","UserContext","useAxios","Loading","BoxAlert","Octicons","Feather","jsx","_jsx","jsxs","_jsxs","EditAnswer","_ref","navigation","route","_useState","params","answer","_useState2","_slicedToArray","setAnswer","_useState3","question","_useState4","setQuestion","_useState5","_useState6","message","setMessage","_useContext","setAlert","_useState7","_useState8","visible","setVisible","_useAxios","callAxios","answerAxios","status","navigate","UpdateInfo","_UpdateInfo","apply","arguments","_asyncToGenerator","Validate","data","id","e","console","log","style","backgroundColor","height","width","children","contentContainerStyle","alignItems","type","flexDirection","fontSize","color","paddingBottom","title","borderRadius","marginTop","onChangeText","value","placeholderTextColor","multiline","numberOfLines","placeholder","fontWeight","zIndex","justifyContent","onPress","borderWidth","borderColor","name","size"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/src/screens/editAnswer.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Image, TouchableOpacity, TextInput, ScrollView} from 'react-native';\nimport { UserContext } from '../../App';\nimport useAxios from '../hooks/useAxios'\nimport Loading from '../components/Loading'\nimport BoxAlert from '../components/BoxAlert'\nimport { Octicons, Feather } from '@expo/vector-icons'; \n\n\n\n\nexport function EditAnswer({ navigation, route }) {\n\n    const [answer, setAnswer] = useState(route.params.answer)\n    const [question, setQuestion] = useState(route.params.question)\n    const [message, setMessage] = useState(\"\")\n    const {setAlert} = useContext(UserContext)\n    const [visible, setVisible] = useState(false)\n    const {callAxios, answerAxios} = useAxios()\n   \n    useEffect(() => {\n        if(answerAxios.status === 200){\n            navigation.navigate('EditDeck')\n        }\n    },[answerAxios])\n\n    async function UpdateInfo(){\n        if (Validate()) {\n            try{\n                const data = {\n                    \"question\": question,\n                    \"answer\": answer\n                }\n                setVisible(true)\n                await callAxios (\"cards/answer/\" + route.params.id , data, \"put\")\n            }catch(e){\n                console.log(e)\n            }finally{\n                setVisible(false)\n            }\n        } else {\n            setMessage('Preencha os campos de pergunta e resposta')\n            setAlert(true)\n        }\n    }\n\n    function Validate(){\n        if(question != \"\" && answer != \"\"){\n            return true\n        }\n        return false\n    }\n\n  return (\n    <View style={{backgroundColor:'#005483', height:'100%', width:'100%'}}>\n        <ScrollView contentContainerStyle={{alignItems:'center'}}>\n            <BoxAlert message={message} type={'erro'}/>\n            <Loading visible={visible}/>\n            <View style={{flexDirection: 'row', width: '80%'}}>\n                <View>\n                    <Text style={{fontSize: 30, color: '#fff', paddingBottom: 20}}>Perguntas</Text>\n\n                    <Text style={{fontSize: 20, color: '#91BDD8', width: 216}}>{route.params.title}</Text>\n                </View>   \n            </View>\n\n            <View style={{width:291, height: 168, backgroundColor: '#23709D', borderRadius: 30, marginTop: 38, alignItems: 'center'}}>\n                <View style={{width: '90%'}}>\n                    <TextInput onChangeText={(Text) => setQuestion(Text)} value={question} placeholderTextColor=\"#91BDD8\" multiline = {true} numberOfLines = {4} placeholder = 'Pergunta' style={{fontSize: 16, fontWeight: '500', color: '#fff'}}></TextInput>\n                </View>\n            </View>\n\n            <View style={{width:291, height: 190, backgroundColor: '#7BACC9', marginTop: -50, borderRadius: 30, alignItems: 'center', zIndex: -1, justifyContent: 'center'}}>\n                <View style={{width: '90%', }}>\n                    <TextInput onChangeText={(Text) => setAnswer(Text)} value={answer} placeholderTextColor=\"#4B82A3\" multiline = {true} numberOfLines = {4} placeholder = 'Resposta' style={{fontSize: 16, fontWeight: '500', color: '#fff'}}></TextInput>\n                </View>\n            </View>\n\n            <View>   \n                <TouchableOpacity onPress={() => UpdateInfo()} style={{width: 82, height: 52, backgroundColor: '#005483', justifyContent: 'center', alignItems: 'center', borderRadius: 20, borderWidth: 2, borderColor: '#91BDD8', marginTop: 40}}>\n                    <Feather name=\"save\" size={30} color=\"#7BACC9\"  />\n                </TouchableOpacity>\n            </View>\n        </ScrollView>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}