{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useRef, useMemo, useCallback } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { toMarkingFormat } from \"../interface\";\nimport { extractCalendarProps } from \"../componentUpdater\";\nimport styleConstructor from \"./style\";\nimport Calendar from \"../calendar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CalendarListItem = React.memo(function (props) {\n  var item = props.item,\n    theme = props.theme,\n    scrollToMonth = props.scrollToMonth,\n    horizontal = props.horizontal,\n    calendarHeight = props.calendarHeight,\n    calendarWidth = props.calendarWidth,\n    propsStyle = props.style,\n    headerStyle = props.headerStyle,\n    onPressArrowLeft = props.onPressArrowLeft,\n    onPressArrowRight = props.onPressArrowRight,\n    visible = props.visible;\n  var style = useRef(styleConstructor(theme));\n  var calendarProps = extractCalendarProps(props);\n  var dateString = toMarkingFormat(item);\n  var calendarStyle = useMemo(function () {\n    return [{\n      width: calendarWidth,\n      minHeight: calendarHeight\n    }, style.current.calendar, propsStyle];\n  }, [calendarWidth, calendarHeight, propsStyle]);\n  var textStyle = useMemo(function () {\n    return [calendarStyle, style.current.placeholderText];\n  }, [calendarStyle]);\n  var _onPressArrowLeft = useCallback(function (method, month) {\n    var monthClone = month == null ? void 0 : month.clone();\n    if (monthClone) {\n      if (onPressArrowLeft) {\n        onPressArrowLeft(method, monthClone);\n      } else if (scrollToMonth) {\n        var currentMonth = monthClone.getMonth();\n        monthClone.addMonths(-1);\n        while (monthClone.getMonth() === currentMonth) {\n          monthClone.setDate(monthClone.getDate() - 1);\n        }\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowLeft, scrollToMonth]);\n  var _onPressArrowRight = useCallback(function (method, month) {\n    var monthClone = month == null ? void 0 : month.clone();\n    if (monthClone) {\n      if (onPressArrowRight) {\n        onPressArrowRight(method, monthClone);\n      } else if (scrollToMonth) {\n        monthClone.addMonths(1);\n        scrollToMonth(monthClone);\n      }\n    }\n  }, [onPressArrowRight, scrollToMonth]);\n  if (!visible) {\n    return _jsx(Text, {\n      style: textStyle,\n      children: dateString\n    });\n  }\n  return _jsx(Calendar, _objectSpread(_objectSpread({\n    hideArrows: true,\n    hideExtraDays: true\n  }, calendarProps), {}, {\n    current: dateString,\n    style: calendarStyle,\n    headerStyle: horizontal ? headerStyle : undefined,\n    disableMonthChange: true,\n    onPressArrowLeft: horizontal ? _onPressArrowLeft : onPressArrowLeft,\n    onPressArrowRight: horizontal ? _onPressArrowRight : onPressArrowRight\n  }));\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';","map":{"version":3,"names":["React","useRef","useMemo","useCallback","Text","toMarkingFormat","extractCalendarProps","styleConstructor","Calendar","jsx","_jsx","CalendarListItem","memo","props","item","theme","scrollToMonth","horizontal","calendarHeight","calendarWidth","propsStyle","style","headerStyle","onPressArrowLeft","onPressArrowRight","visible","calendarProps","dateString","calendarStyle","width","minHeight","current","calendar","textStyle","placeholderText","_onPressArrowLeft","method","month","monthClone","clone","currentMonth","getMonth","addMonths","setDate","getDate","_onPressArrowRight","children","_objectSpread","hideArrows","hideExtraDays","undefined","disableMonthChange","displayName"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/node_modules/react-native-calendars/src/calendar-list/item.js"],"sourcesContent":["import React, { useRef, useMemo, useCallback } from 'react';\nimport { Text } from 'react-native';\nimport { toMarkingFormat } from '../interface';\nimport { extractCalendarProps } from '../componentUpdater';\nimport styleConstructor from './style';\nimport Calendar from '../calendar';\nconst CalendarListItem = React.memo((props) => {\n    const { item, theme, scrollToMonth, horizontal, calendarHeight, calendarWidth, style: propsStyle, headerStyle, onPressArrowLeft, onPressArrowRight, visible } = props;\n    const style = useRef(styleConstructor(theme));\n    const calendarProps = extractCalendarProps(props);\n    const dateString = toMarkingFormat(item);\n    const calendarStyle = useMemo(() => {\n        return [\n            {\n                width: calendarWidth,\n                minHeight: calendarHeight\n            },\n            style.current.calendar,\n            propsStyle\n        ];\n    }, [calendarWidth, calendarHeight, propsStyle]);\n    const textStyle = useMemo(() => {\n        return [calendarStyle, style.current.placeholderText];\n    }, [calendarStyle]);\n    const _onPressArrowLeft = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowLeft) {\n                onPressArrowLeft(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                const currentMonth = monthClone.getMonth();\n                monthClone.addMonths(-1);\n                // Make sure we actually get the previous month, not just 30 days before currentMonth.\n                while (monthClone.getMonth() === currentMonth) {\n                    monthClone.setDate(monthClone.getDate() - 1);\n                }\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowLeft, scrollToMonth]);\n    const _onPressArrowRight = useCallback((method, month) => {\n        const monthClone = month?.clone();\n        if (monthClone) {\n            if (onPressArrowRight) {\n                onPressArrowRight(method, monthClone);\n            }\n            else if (scrollToMonth) {\n                monthClone.addMonths(1);\n                scrollToMonth(monthClone);\n            }\n        }\n    }, [onPressArrowRight, scrollToMonth]);\n    if (!visible) {\n        return (<Text style={textStyle}>{dateString}</Text>);\n    }\n    return (<Calendar hideArrows={true} hideExtraDays={true} {...calendarProps} current={dateString} style={calendarStyle} headerStyle={horizontal ? headerStyle : undefined} disableMonthChange onPressArrowLeft={horizontal ? _onPressArrowLeft : onPressArrowLeft} onPressArrowRight={horizontal ? _onPressArrowRight : onPressArrowRight}/>);\n});\nexport default CalendarListItem;\nCalendarListItem.displayName = 'CalendarListItem';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}