{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as AuthSession from 'expo-auth-session';\nimport Loading from \"../components/Loading\";\nimport axios from 'axios';\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport useStoreCache from \"../hooks/useStoreCache\";\nimport ImageGoogle from \"../../assets/ImageAutentication/imageGoogle.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction Google() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _useStoreCache = useStoreCache(),\n      callStoreCache = _useStoreCache.callStoreCache;\n\n  function SingUpGoogle(user) {\n    var urlCadastrar, data, config, resposta, User;\n    return _regeneratorRuntime.async(function SingUpGoogle$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setVisible(true);\n            _context.prev = 1;\n            urlCadastrar = \"https://istudy-back-production.up.railway.app/api/v1/user/\";\n            data = {\n              name: user.name,\n              email: user.email,\n              senha: user.id,\n              image: user.picture\n            };\n            config = {\n              headers: {\n                Authentication: \"donos_do_codigo\"\n              }\n            };\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios.post(urlCadastrar, data, config));\n\n          case 7:\n            resposta = _context.sent;\n\n            if (resposta.data.status == 200) {\n              User = {\n                id: resposta.data.data.id,\n                email: resposta.data.data.email,\n                name: resposta.data.data.name,\n                token: resposta.data.token,\n                image: resposta.data.data.image_url,\n                matches: resposta.data.statistics[0].playeds,\n                wins: resposta.data.statistics[0].wins,\n                defeats: resposta.data.statistics[0].loses\n              };\n              callStoreCache(User);\n            }\n\n            _context.next = 14;\n            break;\n\n          case 11:\n            _context.prev = 11;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 14:\n            _context.prev = 14;\n            setVisible(false);\n            return _context.finish(14);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 11, 14, 17]], Promise);\n  }\n\n  function handleGoogleSignIn() {\n    var Client_ID, Redirect_URI, Scope, Response_Type, authUrl, _await$AuthSession$st, type, params, response, user;\n\n    return _regeneratorRuntime.async(function handleGoogleSignIn$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            Client_ID = \"799907269970-ensptj6ekngvivertamcgf5df9f384dd.apps.googleusercontent.com\";\n            Redirect_URI = \"https://auth.expo.io/@lucastkp/authApp\";\n            Scope = encodeURI(\"profile email\");\n            Response_Type = \"token\";\n            authUrl = \"https://accounts.google.com/o/oauth2/v2/auth?client_id=\" + Client_ID + \"&redirect_uri=\" + Redirect_URI + \"&response_type=\" + Response_Type + \"&scope=\" + Scope;\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(AuthSession.startAsync({\n              authUrl: authUrl\n            }));\n\n          case 8:\n            _await$AuthSession$st = _context2.sent;\n            type = _await$AuthSession$st.type;\n            params = _await$AuthSession$st.params;\n\n            if (!(type == 'success')) {\n              _context2.next = 19;\n              break;\n            }\n\n            _context2.next = 14;\n            return _regeneratorRuntime.awrap(fetch(\"https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=\" + params.access_token));\n\n          case 14:\n            response = _context2.sent;\n            _context2.next = 17;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 17:\n            user = _context2.sent;\n            SingUpGoogle(user);\n\n          case 19:\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 21]], Promise);\n  }\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Loading, {\n      visible: visible\n    }), _jsxs(TouchableOpacity, {\n      style: styles.buttonLogin,\n      onPress: function onPress() {\n        return handleGoogleSignIn();\n      },\n      children: [_jsx(ImageGoogle, {}), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Entrar com o Google\"\n      })]\n    })]\n  });\n}\n\nvar styles = StyleSheet.create({\n  buttonLogin: {\n    marginTop: 20,\n    backgroundColor: \"#FFF\",\n    borderRadius: 20,\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    width: 262,\n    height: 54,\n    flexDirection: 'row'\n  },\n  buttonText: {\n    fontSize: 16,\n    color: '#004973',\n    marginLeft: 24\n  },\n  buttonGoogle: {\n    alignSelf: 'center'\n  }\n});\nexport default Google;","map":{"version":3,"names":["AuthSession","Loading","axios","React","useStoreCache","ImageGoogle","Google","useState","visible","setVisible","callStoreCache","SingUpGoogle","user","urlCadastrar","data","name","email","senha","id","image","picture","config","headers","Authentication","post","resposta","status","User","token","image_url","matches","statistics","playeds","wins","defeats","loses","console","log","handleGoogleSignIn","Client_ID","Redirect_URI","Scope","encodeURI","Response_Type","authUrl","startAsync","type","params","fetch","access_token","response","json","styles","buttonLogin","buttonText","StyleSheet","create","marginTop","backgroundColor","borderRadius","paddingVertical","paddingHorizontal","width","height","flexDirection","fontSize","color","marginLeft","buttonGoogle","alignSelf"],"sources":["/home/logic2606/Documentos/Dev/IStudy Project/Istudy-Front/src/components/Google.jsx"],"sourcesContent":["import * as AuthSession from 'expo-auth-session'\nimport Loading from '../components/Loading'\nimport axios from 'axios';\nimport React from 'react'\nimport {Image, TouchableOpacity, StyleSheet, Text } from 'react-native'\nimport useStoreCache from '../hooks/useStoreCache'\nimport ImageGoogle from '../../assets/ImageAutentication/imageGoogle.svg'\n\nfunction Google() {\n  const [visible, setVisible] = React.useState(false)\n  //Variavel Informação do StoreCache\n  const {callStoreCache} = useStoreCache()\n    async function SingUpGoogle(user){\n        setVisible(true)\n        try{\n          const urlCadastrar = \"https://istudy-back-production.up.railway.app/api/v1/user/\"       \n\n          const data = {\n            name: user.name,\n            email: user.email,\n            senha: user.id,\n            image: user.picture\n          }\n          \n          const config = {\n              headers:{\n                Authentication: \"donos_do_codigo\"\n              }\n          }\n\n          const resposta = await axios.post(urlCadastrar, data, config)\n\n          if (resposta.data.status == 200){\n            const User = {\n              id: resposta.data.data.id,\n              email:resposta.data.data.email,\n              name: resposta.data.data.name,\n              token: resposta.data.token,\n              image: resposta.data.data.image_url,\n              matches: resposta.data.statistics[0].playeds,\n              wins: resposta.data.statistics[0].wins,\n              defeats: resposta.data.statistics[0].loses\n            }\n            callStoreCache(User)\n          }\n          } catch(e)  {\n            \n            console.log(e)\n          } finally {\n            setVisible(false);\n          }\n      }\n\n      async function handleGoogleSignIn(){\n        try{\n          const Client_ID = \"799907269970-ensptj6ekngvivertamcgf5df9f384dd.apps.googleusercontent.com\"\n          const Redirect_URI = \"https://auth.expo.io/@lucastkp/authApp\"\n          const Scope = encodeURI(\"profile email\")\n          const Response_Type = \"token\"\n    \n          const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?client_id=${Client_ID}&redirect_uri=${Redirect_URI}&response_type=${Response_Type}&scope=${Scope}`\n    \n         const  {type , params} = await AuthSession.startAsync({authUrl});\n    \n         if(type == 'success'){\n          const response = await fetch(`https://www.googleapis.com/oauth2/v1/userinfo?alt=json&access_token=${params.access_token}`)\n          const user = await response.json();\n          SingUpGoogle(user)\n         }\n        }catch(e){\n          console.log(e)\n        }\n      }\n\n  return (\n    <>\n    <Loading visible={visible} />\n    <TouchableOpacity style={styles.buttonLogin} onPress={() => handleGoogleSignIn()}>\n        <ImageGoogle />\n        <Text style={styles.buttonText}>Entrar com o Google</Text>\n    </TouchableOpacity>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  buttonLogin:{\n  marginTop: 20,\n  backgroundColor: \"#FFF\",\n  borderRadius: 20,\n  paddingVertical: 15,\n  paddingHorizontal: 20,\n  width: 262,\n  height: 54,\n  flexDirection: 'row',\n  },\n  buttonText:{\n    fontSize: 16,\n    color: '#004973',\n    marginLeft: 24,\n},\nbuttonGoogle:{\n    alignSelf: 'center',\n},\n\n})\n\n\nexport default Google"],"mappings":"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"},"metadata":{},"sourceType":"module"}