{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { UserContext } from \"../../App\";\nimport useAxios from \"../hooks/useAxios\";\nimport Loading from \"../components/Loading\";\nimport BoxAlert from \"../components/BoxAlert\";\nimport { Octicons, Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function EditAnswer(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState(route.params.answer),\n      _useState2 = _slicedToArray(_useState, 2),\n      answer = _useState2[0],\n      setAnswer = _useState2[1];\n\n  var _useState3 = useState(route.params.question),\n      _useState4 = _slicedToArray(_useState3, 2),\n      question = _useState4[0],\n      setQuestion = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      message = _useState6[0],\n      setMessage = _useState6[1];\n\n  var _useContext = useContext(UserContext),\n      setAlert = _useContext.setAlert;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visible = _useState8[0],\n      setVisible = _useState8[1];\n\n  var _useAxios = useAxios(),\n      callAxios = _useAxios.callAxios,\n      answerAxios = _useAxios.answerAxios;\n\n  useEffect(function () {\n    if (answerAxios.status === 200) {\n      navigation.navigate('EditDeck');\n    }\n  }, [answerAxios]);\n\n  function UpdateInfo() {\n    var data;\n    return _regeneratorRuntime.async(function UpdateInfo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Validate()) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.prev = 1;\n            data = {\n              \"question\": question,\n              \"answer\": answer\n            };\n            setVisible(true);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(callAxios(\"cards/answer/\" + route.params.id, data, \"put\"));\n\n          case 6:\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n            _context.prev = 11;\n            setVisible(false);\n            return _context.finish(11);\n\n          case 14:\n            _context.next = 18;\n            break;\n\n          case 16:\n            setMessage('Preencha os campos de pergunta e resposta');\n            setAlert(true);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 8, 11, 14]], Promise);\n  }\n\n  function Validate() {\n    if (question != \"\" && answer != \"\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  return _jsxs(View, {\n    style: {\n      backgroundColor: '#005483',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center'\n    },\n    children: [_jsx(BoxAlert, {\n      message: message,\n      type: 'erro'\n    }), _jsx(Loading, {\n      visible: visible\n    }), _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        width: '80%'\n      },\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 30,\n            color: '#fff',\n            paddingBottom: 20\n          },\n          children: \"Perguntas\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 20,\n            color: '#91BDD8',\n            width: 216\n          },\n          children: route.params.title\n        })]\n      })\n    }), _jsx(View, {\n      style: {\n        width: 291,\n        height: 168,\n        backgroundColor: '#23709D',\n        borderRadius: 30,\n        marginTop: 38,\n        alignItems: 'center'\n      },\n      children: _jsx(View, {\n        style: {\n          width: '90%'\n        },\n        children: _jsx(TextInput, {\n          onChangeText: function onChangeText(Text) {\n            return setQuestion(Text);\n          },\n          value: question,\n          placeholderTextColor: \"#91BDD8\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholder: \"Pergunta\",\n          style: {\n            fontSize: 16,\n            fontWeight: '500',\n            color: '#fff'\n          }\n        })\n      })\n    }), _jsx(View, {\n      style: {\n        width: 291,\n        height: 190,\n        backgroundColor: '#7BACC9',\n        marginTop: -50,\n        borderRadius: 30,\n        alignItems: 'center',\n        zIndex: -1,\n        justifyContent: 'center'\n      },\n      children: _jsx(View, {\n        style: {\n          width: '90%'\n        },\n        children: _jsx(TextInput, {\n          onChangeText: function onChangeText(Text) {\n            return setAnswer(Text);\n          },\n          value: answer,\n          placeholderTextColor: \"#4B82A3\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholder: \"Resposta\",\n          style: {\n            fontSize: 16,\n            fontWeight: '500',\n            color: '#fff'\n          }\n        })\n      })\n    }), _jsx(View, {\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return UpdateInfo();\n        },\n        style: {\n          width: 82,\n          height: 52,\n          backgroundColor: '#005483',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: 20,\n          borderWidth: 2,\n          borderColor: '#91BDD8',\n          marginTop: 40\n        },\n        children: _jsx(Feather, {\n          name: \"save\",\n          size: 30,\n          color: \"#7BACC9\"\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useState","useEffect","UserContext","useAxios","Loading","BoxAlert","Octicons","Feather","EditAnswer","navigation","route","params","answer","setAnswer","question","setQuestion","message","setMessage","setAlert","visible","setVisible","callAxios","answerAxios","status","navigate","UpdateInfo","Validate","data","id","console","log","backgroundColor","height","width","alignItems","flexDirection","fontSize","color","paddingBottom","title","borderRadius","marginTop","Text","fontWeight","zIndex","justifyContent","borderWidth","borderColor"],"sources":["/home/logic2606/Documentos/Dev/IStudy Project/Istudy-Front/src/screens/editAnswer.jsx"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { Text, View, StyleSheet, Image, TouchableOpacity, TextInput} from 'react-native';\nimport { UserContext } from '../../App';\nimport useAxios from '../hooks/useAxios'\nimport Loading from '../components/Loading'\nimport BoxAlert from '../components/BoxAlert'\nimport { Octicons, Feather } from '@expo/vector-icons'; \n\n\n\n\nexport function EditAnswer({ navigation, route }) {\n\n    const [answer, setAnswer] = useState(route.params.answer)\n    const [question, setQuestion] = useState(route.params.question)\n    const [message, setMessage] = useState(\"\")\n    const {setAlert} = useContext(UserContext)\n    const [visible, setVisible] = useState(false)\n    const {callAxios, answerAxios} = useAxios()\n   \n    useEffect(() => {\n        if(answerAxios.status === 200){\n            navigation.navigate('EditDeck')\n        }\n    },[answerAxios])\n\n    async function UpdateInfo(){\n        if (Validate()) {\n            try{\n                const data = {\n                    \"question\": question,\n                    \"answer\": answer\n                }\n                setVisible(true)\n                await callAxios (\"cards/answer/\" + route.params.id , data, \"put\")\n            }catch(e){\n                console.log(e)\n            }finally{\n                setVisible(false)\n            }\n        } else {\n            setMessage('Preencha os campos de pergunta e resposta')\n            setAlert(true)\n        }\n    }\n\n    function Validate(){\n        if(question != \"\" && answer != \"\"){\n            return true\n        }\n        return false\n    }\n\n  return (\n    <View style={{backgroundColor:'#005483', height:'100%', width:'100%', alignItems: 'center'}}>\n        <BoxAlert message={message} type={'erro'}/>\n        <Loading visible={visible}/>\n        <View style={{flexDirection: 'row', width: '80%'}}>\n            <View>\n                <Text style={{fontSize: 30, color: '#fff', paddingBottom: 20}}>Perguntas</Text>\n\n                <Text style={{fontSize: 20, color: '#91BDD8', width: 216}}>{route.params.title}</Text>\n            </View>   \n        </View>\n\n        <View style={{width:291, height: 168, backgroundColor: '#23709D', borderRadius: 30, marginTop: 38, alignItems: 'center'}}>\n            <View style={{width: '90%'}}>\n                <TextInput onChangeText={(Text) => setQuestion(Text)} value={question} placeholderTextColor=\"#91BDD8\" multiline = {true} numberOfLines = {4} placeholder = 'Pergunta' style={{fontSize: 16, fontWeight: '500', color: '#fff'}}></TextInput>\n            </View>\n        </View>\n\n        <View style={{width:291, height: 190, backgroundColor: '#7BACC9', marginTop: -50, borderRadius: 30, alignItems: 'center', zIndex: -1, justifyContent: 'center'}}>\n            <View style={{width: '90%', }}>\n                <TextInput onChangeText={(Text) => setAnswer(Text)} value={answer} placeholderTextColor=\"#4B82A3\" multiline = {true} numberOfLines = {4} placeholder = 'Resposta' style={{fontSize: 16, fontWeight: '500', color: '#fff'}}></TextInput>\n            </View>\n        </View>\n\n        <View>   \n            <TouchableOpacity onPress={() => UpdateInfo()} style={{width: 82, height: 52, backgroundColor: '#005483', justifyContent: 'center', alignItems: 'center', borderRadius: 20, borderWidth: 2, borderColor: '#91BDD8', marginTop: 40}}>\n                <Feather name=\"save\" size={30} color=\"#7BACC9\"  />\n            </TouchableOpacity>\n        </View>\n    </View>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;;;;;;;AAEA,SAASC,WAAT;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,oBAAlC;;;AAKA,OAAO,SAASC,UAAT,OAA2C;EAAA,IAArBC,UAAqB,QAArBA,UAAqB;EAAA,IAATC,KAAS,QAATA,KAAS;;EAE9C,gBAA4BV,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaC,MAAd,CAApC;EAAA;EAAA,IAAOA,MAAP;EAAA,IAAeC,SAAf;;EACA,iBAAgCb,QAAQ,CAACU,KAAK,CAACC,MAAN,CAAaG,QAAd,CAAxC;EAAA;EAAA,IAAOA,QAAP;EAAA,IAAiBC,WAAjB;;EACA,iBAA8Bf,QAAQ,CAAC,EAAD,CAAtC;EAAA;EAAA,IAAOgB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,kBAAmBlB,UAAU,CAACG,WAAD,CAA7B;EAAA,IAAOgB,QAAP,eAAOA,QAAP;;EACA,iBAA8BlB,QAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAOmB,OAAP;EAAA,IAAgBC,UAAhB;;EACA,gBAAiCjB,QAAQ,EAAzC;EAAA,IAAOkB,SAAP,aAAOA,SAAP;EAAA,IAAkBC,WAAlB,aAAkBA,WAAlB;;EAEArB,SAAS,CAAC,YAAM;IACZ,IAAGqB,WAAW,CAACC,MAAZ,KAAuB,GAA1B,EAA8B;MAC1Bd,UAAU,CAACe,QAAX,CAAoB,UAApB;IACH;EACJ,CAJQ,EAIP,CAACF,WAAD,CAJO,CAAT;;EAMA,SAAeG,UAAf;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA,KACQC,QAAQ,EADhB;cAAA;cAAA;YAAA;;YAAA;YAGkBC,IAHlB,GAGyB;cACT,YAAYb,QADH;cAET,UAAUF;YAFD,CAHzB;YAOYQ,UAAU,CAAC,IAAD,CAAV;YAPZ;YAAA,iCAQkBC,SAAS,CAAE,kBAAkBX,KAAK,CAACC,MAAN,CAAaiB,EAAjC,EAAsCD,IAAtC,EAA4C,KAA5C,CAR3B;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;YAUYE,OAAO,CAACC,GAAR;;UAVZ;YAAA;YAYYV,UAAU,CAAC,KAAD,CAAV;YAZZ;;UAAA;YAAA;YAAA;;UAAA;YAeQH,UAAU,CAAC,2CAAD,CAAV;YACAC,QAAQ,CAAC,IAAD,CAAR;;UAhBR;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;;EAoBA,SAASQ,QAAT,GAAmB;IACf,IAAGZ,QAAQ,IAAI,EAAZ,IAAkBF,MAAM,IAAI,EAA/B,EAAkC;MAC9B,OAAO,IAAP;IACH;;IACD,OAAO,KAAP;EACH;;EAEH,OACE,MAAC,IAAD;IAAM,KAAK,EAAE;MAACmB,eAAe,EAAC,SAAjB;MAA4BC,MAAM,EAAC,MAAnC;MAA2CC,KAAK,EAAC,MAAjD;MAAyDC,UAAU,EAAE;IAArE,CAAb;IAAA,WACI,KAAC,QAAD;MAAU,OAAO,EAAElB,OAAnB;MAA4B,IAAI,EAAE;IAAlC,EADJ,EAEI,KAAC,OAAD;MAAS,OAAO,EAAEG;IAAlB,EAFJ,EAGI,KAAC,IAAD;MAAM,KAAK,EAAE;QAACgB,aAAa,EAAE,KAAhB;QAAuBF,KAAK,EAAE;MAA9B,CAAb;MAAA,UACI,MAAC,IAAD;QAAA,WACI,KAAC,IAAD;UAAM,KAAK,EAAE;YAACG,QAAQ,EAAE,EAAX;YAAeC,KAAK,EAAE,MAAtB;YAA8BC,aAAa,EAAE;UAA7C,CAAb;UAAA;QAAA,EADJ,EAGI,KAAC,IAAD;UAAM,KAAK,EAAE;YAACF,QAAQ,EAAE,EAAX;YAAeC,KAAK,EAAE,SAAtB;YAAiCJ,KAAK,EAAE;UAAxC,CAAb;UAAA,UAA4DvB,KAAK,CAACC,MAAN,CAAa4B;QAAzE,EAHJ;MAAA;IADJ,EAHJ,EAWI,KAAC,IAAD;MAAM,KAAK,EAAE;QAACN,KAAK,EAAC,GAAP;QAAYD,MAAM,EAAE,GAApB;QAAyBD,eAAe,EAAE,SAA1C;QAAqDS,YAAY,EAAE,EAAnE;QAAuEC,SAAS,EAAE,EAAlF;QAAsFP,UAAU,EAAE;MAAlG,CAAb;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAE;UAACD,KAAK,EAAE;QAAR,CAAb;QAAA,UACI,KAAC,SAAD;UAAW,YAAY,EAAE,sBAACS,IAAD;YAAA,OAAU3B,WAAW,CAAC2B,IAAD,CAArB;UAAA,CAAzB;UAAsD,KAAK,EAAE5B,QAA7D;UAAuE,oBAAoB,EAAC,SAA5F;UAAsG,SAAS,EAAI,IAAnH;UAAyH,aAAa,EAAI,CAA1I;UAA6I,WAAW,EAAG,UAA3J;UAAsK,KAAK,EAAE;YAACsB,QAAQ,EAAE,EAAX;YAAeO,UAAU,EAAE,KAA3B;YAAkCN,KAAK,EAAE;UAAzC;QAA7K;MADJ;IADJ,EAXJ,EAiBI,KAAC,IAAD;MAAM,KAAK,EAAE;QAACJ,KAAK,EAAC,GAAP;QAAYD,MAAM,EAAE,GAApB;QAAyBD,eAAe,EAAE,SAA1C;QAAqDU,SAAS,EAAE,CAAC,EAAjE;QAAqED,YAAY,EAAE,EAAnF;QAAuFN,UAAU,EAAE,QAAnG;QAA6GU,MAAM,EAAE,CAAC,CAAtH;QAAyHC,cAAc,EAAE;MAAzI,CAAb;MAAA,UACI,KAAC,IAAD;QAAM,KAAK,EAAE;UAACZ,KAAK,EAAE;QAAR,CAAb;QAAA,UACI,KAAC,SAAD;UAAW,YAAY,EAAE,sBAACS,IAAD;YAAA,OAAU7B,SAAS,CAAC6B,IAAD,CAAnB;UAAA,CAAzB;UAAoD,KAAK,EAAE9B,MAA3D;UAAmE,oBAAoB,EAAC,SAAxF;UAAkG,SAAS,EAAI,IAA/G;UAAqH,aAAa,EAAI,CAAtI;UAAyI,WAAW,EAAG,UAAvJ;UAAkK,KAAK,EAAE;YAACwB,QAAQ,EAAE,EAAX;YAAeO,UAAU,EAAE,KAA3B;YAAkCN,KAAK,EAAE;UAAzC;QAAzK;MADJ;IADJ,EAjBJ,EAuBI,KAAC,IAAD;MAAA,UACI,KAAC,gBAAD;QAAkB,OAAO,EAAE;UAAA,OAAMZ,UAAU,EAAhB;QAAA,CAA3B;QAA+C,KAAK,EAAE;UAACQ,KAAK,EAAE,EAAR;UAAYD,MAAM,EAAE,EAApB;UAAwBD,eAAe,EAAE,SAAzC;UAAoDc,cAAc,EAAE,QAApE;UAA8EX,UAAU,EAAE,QAA1F;UAAoGM,YAAY,EAAE,EAAlH;UAAsHM,WAAW,EAAE,CAAnI;UAAsIC,WAAW,EAAE,SAAnJ;UAA8JN,SAAS,EAAE;QAAzK,CAAtD;QAAA,UACI,KAAC,OAAD;UAAS,IAAI,EAAC,MAAd;UAAqB,IAAI,EAAE,EAA3B;UAA+B,KAAK,EAAC;QAArC;MADJ;IADJ,EAvBJ;EAAA,EADF;AA+BD"},"metadata":{},"sourceType":"module"}