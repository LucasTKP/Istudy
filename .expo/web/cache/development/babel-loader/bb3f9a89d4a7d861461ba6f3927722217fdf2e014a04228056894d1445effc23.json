{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TipHalf from \"../../assets/ImageIcons/tipHalf.svg\";\nimport TipCarts from \"../../assets/ImageIcons/tipCarts.svg\";\nimport A from \"../../assets/ImageIcons/Group-1.svg\";\nimport Two from \"../../assets/ImageIcons/Group-3.svg\";\nimport Three from \"../../assets/ImageIcons/Group-2.svg\";\nimport Back from \"../../assets/ImageIcons/Group.svg\";\nimport useAxios from \"../hooks/useAxios\";\nimport { UserContext } from \"../../App\";\nimport io from \"socket.io-client/dist/socket.io\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GameQuestion(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useContext = useContext(UserContext),\n    dataUser = _useContext.dataUser;\n  var _useAxios = useAxios(),\n    callAxios = _useAxios.callAxios,\n    answerAxios = _useAxios.answerAxios;\n  var _useState = useState({\n      letter: '',\n      already: false,\n      correct: false\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    answered = _useState2[0],\n    setAnswered = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    question = _useState4[0],\n    setQuestion = _useState4[1];\n  var _route$params = route.params,\n    roomId = _route$params.roomId,\n    flashId = _route$params.flashId;\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    already = _useState6[0],\n    setAlready = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    waiting = _useState8[0],\n    setWaiting = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    corrects = _useState10[0],\n    setCorrects = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    wrongs = _useState12[0],\n    setWrongs = _useState12[1];\n  var _useState13 = useState(''),\n    _useState14 = _slicedToArray(_useState13, 2),\n    socket = _useState14[0],\n    setSocket = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    resetCount = _useState16[0],\n    setResetCount = _useState16[1];\n  var _useState17 = useState([]),\n    _useState18 = _slicedToArray(_useState17, 2),\n    result = _useState18[0],\n    setResult = _useState18[1];\n  var _useState19 = useState(50),\n    _useState20 = _slicedToArray(_useState19, 2),\n    count = _useState20[0],\n    setCount = _useState20[1];\n  var _useState21 = useState(0),\n    _useState22 = _slicedToArray(_useState21, 2),\n    afk = _useState22[0],\n    setAfk = _useState22[1];\n  var _useState23 = useState(false),\n    _useState24 = _slicedToArray(_useState23, 2),\n    clicked1 = _useState24[0],\n    setClicked1 = _useState24[1];\n  var _useState25 = useState(false),\n    _useState26 = _slicedToArray(_useState25, 2),\n    clicked2 = _useState26[0],\n    setClicked2 = _useState26[1];\n  var _useState27 = useState([]),\n    _useState28 = _slicedToArray(_useState27, 2),\n    wrongQuestions = _useState28[0],\n    setWrongsQuestions = _useState28[1];\n  var _useState29 = useState(false),\n    _useState30 = _slicedToArray(_useState29, 2),\n    alert = _useState30[0],\n    setAlert = _useState30[1];\n  var _useState31 = useState(),\n    _useState32 = _slicedToArray(_useState31, 2),\n    cardSelected = _useState32[0],\n    setCardSelected = _useState32[1];\n  var _useState33 = useState(0),\n    _useState34 = _slicedToArray(_useState33, 2),\n    quantityWrongs = _useState34[0],\n    setQuantityWrongs = _useState34[1];\n  var _useState35 = useState(false),\n    _useState36 = _slicedToArray(_useState35, 2),\n    a = _useState36[0],\n    setA = _useState36[1];\n  var _useState37 = useState(route.params.first),\n    _useState38 = _slicedToArray(_useState37, 2),\n    yourTime = _useState38[0],\n    setYourTime = _useState38[1];\n  console.log(yourTime);\n  var cards = [_jsx(Back, {\n    width: \"50\"\n  }), _jsx(A, {\n    width: \"50\"\n  }), _jsx(Two, {\n    width: \"50\"\n  }), _jsx(Three, {\n    width: \"50\"\n  })];\n  useEffect(function () {\n    if (result[1]) {\n      navigation.navigate('GameResult', {\n        result: result,\n        total: answerAxios.res[0].questions.length\n      });\n    }\n  }, [result]);\n  useEffect(function () {\n    if (socket != '') {\n      socket.emit('left_game', {\n        room_id: roomId,\n        afk: false\n      });\n      socket.on('resAfk', function (msg) {\n        if (msg.afk && a == false) {\n          navigation.navigate('Home');\n        }\n      });\n    }\n  }, [socket]);\n  useEffect(function () {\n    setSocket(io(\"https://istudy-online-production.up.railway.app\", {\n      transports: [\"websocket\"]\n    }));\n    function questions() {\n      return _questions.apply(this, arguments);\n    }\n    function _questions() {\n      _questions = _asyncToGenerator(function* () {\n        yield callAxios('cards/questions/' + flashId, '', 'get');\n      });\n      return _questions.apply(this, arguments);\n    }\n    questions();\n  }, []);\n  useEffect(function () {\n    return navigation.addListener('beforeRemove', function (e) {\n      e.preventDefault();\n      if (a == false) {\n        Alert.alert('Deixar partida?', 'Deseja mesmo deixar a partida? (Se não clicou em nenhum botão para sair, possivelmente seu adversario está AFK)', [{\n          text: \"Não sair\",\n          style: 'cancel',\n          onPress: function onPress() {}\n        }, {\n          text: 'Sair',\n          style: 'destructive',\n          onPress: function onPress() {\n            setA(true);\n            socket.emit('finish_game', {\n              room_id: roomId\n            });\n            socket.on('disconnect');\n            socket.emit('left_game', {\n              room_id: 6931,\n              afk: true\n            });\n            navigation.dispatch(e.data.action);\n          }\n        }]);\n      }\n      ;\n    });\n  }, [navigation, socket]);\n  useEffect(function () {\n    if (resetCount == false) {\n      var interval = setInterval(function () {\n        if (count == 0) {\n          setAfk(afk + 1);\n          endQuestion();\n        } else {\n          setCount(count - 1);\n        }\n      }, 1000);\n      return function () {\n        return clearInterval(interval);\n      };\n    }\n  }, [count]);\n  useEffect(function () {\n    if (wrongQuestions.find(function (letter) {\n      return letter == answerAxios.res[0].questions[question].correct_letter;\n    })) {\n      tips(2);\n    }\n  }, [wrongQuestions]);\n  function tips(n) {\n    var letters = ['A', 'B', 'C', 'D'];\n    setWrongsQuestions(letters.map(function (x) {\n      return {\n        x: x,\n        r: Math.random()\n      };\n    }).sort(function (a, b) {\n      return a.r - b.r;\n    }).map(function (a) {\n      return a.x;\n    }).slice(0, quantityWrongs > 0 ? quantityWrongs : n));\n    setTimeout(function () {\n      return setAlert(false);\n    }, 1000);\n  }\n  function finishGame() {\n    socket.emit('finish_game', {\n      room_id: roomId,\n      results: {\n        name: dataUser.name,\n        correct: corrects,\n        wrong: wrongs,\n        image: dataUser.image\n      }\n    });\n    socket.on('resEnd', function (res) {\n      return setResult(function (prev) {\n        return [].concat(_toConsumableArray(prev), [res]);\n      });\n    }).on('disconnect');\n  }\n  function answer(letter) {\n    if (answerAxios.res[0].questions[question].correct_letter == letter) {\n      setAnswered({\n        letter: letter,\n        already: true,\n        correct: true\n      });\n      setAlready(true);\n      setCorrects(corrects + 1);\n    } else {\n      setAnswered({\n        letter: letter,\n        already: true,\n        correct: false\n      });\n      setAlready(true);\n      setWrongs(wrongs + 1);\n    }\n    setResetCount(true);\n    endQuestion();\n  }\n  function endQuestion() {\n    socket.emit('answer_game', {\n      room_id: roomId\n    });\n    socket.on('resAnswer', function (msg) {\n      if (msg.ready) {\n        setAnswered({\n          letter: '',\n          already: false,\n          correct: false\n        });\n        setAlready(false);\n        setWaiting(false);\n        setResetCount(false);\n        setWrongsQuestions([]);\n        setQuantityWrongs(0);\n        setCount(50);\n        if (question + 1 < answerAxios.res[0].questions.length) {\n          setQuestion(question + 1);\n        } else {\n          finishGame();\n        }\n      } else {\n        setWaiting(true);\n      }\n    });\n  }\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      backgroundColor: '#005483'\n    },\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: alert,\n      onRequestClose: function onRequestClose() {\n        setAlert(!alert);\n      },\n      children: _jsx(View, {\n        style: styles.buttonSair,\n        children: _jsxs(View, {\n          style: styles.box,\n          children: [_jsx(Text, {\n            style: styles.textWarning,\n            children: \"Escolha uma carta\"\n          }), _jsxs(View, {\n            style: styles.cards,\n            children: [_jsx(View, {\n              onTouchStart: function onTouchStart() {\n                setCardSelected(1);\n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0);\n                setClicked1(true);\n                tips();\n              },\n              style: {\n                marginRight: 8\n              },\n              children: cardSelected == 1 ? cards[quantityWrongs] : _jsx(Back, {\n                width: \"50\"\n              })\n            }), _jsx(View, {\n              onTouchStart: function onTouchStart() {\n                setCardSelected(2);\n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0);\n                setClicked1(true);\n                tips();\n              },\n              style: {\n                marginRight: 8\n              },\n              children: cardSelected == 2 ? cards[quantityWrongs] : _jsx(Back, {\n                width: \"50\"\n              })\n            }), _jsx(View, {\n              onTouchStart: function onTouchStart() {\n                setCardSelected(3);\n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0);\n                setClicked1(true);\n                tips();\n              },\n              style: {\n                marginRight: 8\n              },\n              children: cardSelected == 3 ? cards[quantityWrongs] : _jsx(Back, {\n                width: \"50\"\n              })\n            }), _jsx(View, {\n              onTouchStart: function onTouchStart() {\n                setCardSelected(4);\n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0);\n                setClicked1(true);\n                tips();\n              },\n              children: cardSelected == 4 ? cards[quantityWrongs] : _jsx(Back, {\n                width: \"50\"\n              })\n            })]\n          }), cardSelected ? _jsx(Text, {}) : _jsx(TouchableOpacity, {\n            style: styles.buttonOk,\n            onPress: function onPress() {\n              setAlert(!alert);\n              setClicked1(false);\n            },\n            children: _jsx(Text, {\n              style: styles.textButtonOk,\n              children: \"Cancelar\"\n            })\n          })]\n        })\n      })\n    }), answerAxios.res && answerAxios.res[0] ? _jsx(View, {\n      children: yourTime ? _jsxs(ScrollView, {\n        contentContainerStyle: {\n          width: '100%',\n          alignItems: 'center'\n        },\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            onPress: function onPress() {\n              return navigation.navigate('GameAnswer');\n            },\n            style: {\n              color: '#fff',\n              fontSize: 20,\n              fontWeight: '500',\n              marginTop: 25\n            },\n            children: `0:${count}`\n          }), _jsx(View, {\n            style: {\n              width: '94%',\n              height: 3,\n              backgroundColor: 'rgba(193, 193, 193, 1)'\n            },\n            children: _jsx(View, {\n              style: {\n                width: `${count + count}%`,\n                height: '100%',\n                backgroundColor: '#fff'\n              }\n            })\n          })]\n        }), _jsxs(View, {\n          style: {\n            width: '80%',\n            alignItems: 'center'\n          },\n          children: [waiting ? _jsx(Text, {\n            style: {\n              fontSize: 20,\n              color: 'white'\n            },\n            children: \"Aguardando o outro jogador...\"\n          }) : _jsx(Text, {}), _jsxs(Text, {\n            style: styles.initialText,\n            children: [\" \", question + 1 + '/' + answerAxios.res[0].questions.length, \" \"]\n          }), _jsx(View, {\n            style: styles.textArea,\n            children: _jsx(ScrollView, {\n              nestedScrollEnabled: true,\n              contentContainerStyle: {\n                width: '100%'\n              },\n              children: _jsx(Text, {\n                multiline: true,\n                style: {\n                  fontSize: 16,\n                  fontWeight: '500',\n                  margin: 20\n                },\n                children: answerAxios.res[0].questions[question].text\n              })\n            })\n          }), _jsxs(View, {\n            style: {\n              width: '80%',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              marginTop: 15\n            },\n            children: [_jsx(View, {\n              style: {\n                opacity: clicked1 ? 0.3 : 1\n              },\n              onTouchStart: function onTouchStart() {\n                if (clicked1 == false && already == false) {\n                  setAlert(true);\n                  setClicked1(true);\n                }\n              },\n              children: _jsx(TipCarts, {})\n            }), _jsx(View, {\n              style: {\n                opacity: clicked2 ? 0.3 : 1\n              },\n              onTouchStart: function onTouchStart() {\n                if (clicked2 == false && already == false) {\n                  tips(2);\n                  setClicked2(true);\n                }\n              },\n              children: _jsx(TipHalf, {})\n            })]\n          }), _jsxs(View, {\n            style: styles.answerArea,\n            children: [_jsxs(View, {\n              style: styles.configAnswer,\n              children: [_jsx(View, {\n                style: styles.divLetterAnswer,\n                children: _jsx(Text, {\n                  style: styles.letterAnswer,\n                  children: \"A\"\n                })\n              }), _jsx(View, {\n                style: {\n                  width: 230,\n                  height: 40,\n                  backgroundColor: wrongQuestions[0] && wrongQuestions.includes('A') ? '#C53E' : 'rgba(158, 222, 254, 1)',\n                  borderRadius: 8,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: 'rgba(35, 112, 157, 1)',\n                  borderWidth: 3,\n                  borderColor: answered.already && answered.letter == 'A' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'A' && answered.already ? '#C53D34' : '#007FC7'\n                },\n                onTouchStart: function onTouchStart() {\n                  if (already == false) {\n                    answer('A');\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.answer,\n                  children: answerAxios.res[0].questions[question].letter_a\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.configAnswer,\n              children: [_jsx(View, {\n                style: styles.divLetterAnswer,\n                children: _jsx(Text, {\n                  style: styles.letterAnswer,\n                  children: \"B\"\n                })\n              }), _jsx(View, {\n                style: {\n                  width: 230,\n                  height: 40,\n                  backgroundColor: wrongQuestions[0] && wrongQuestions.includes('B') ? '#C53E' : 'rgba(158, 222, 254, 1)',\n                  borderRadius: 8,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: 'rgba(35, 112, 157, 1)',\n                  borderWidth: 3,\n                  borderColor: answered.already && answered.letter == 'B' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'B' && answered.already ? '#C53D34' : '#007FC7'\n                },\n                onTouchStart: function onTouchStart() {\n                  if (already == false) {\n                    answer('B');\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.answer,\n                  children: answerAxios.res[0].questions[question].letter_b\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.configAnswer,\n              children: [_jsx(View, {\n                style: styles.divLetterAnswer,\n                children: _jsx(Text, {\n                  style: styles.letterAnswer,\n                  children: \"C\"\n                })\n              }), _jsx(View, {\n                style: {\n                  width: 230,\n                  height: 40,\n                  backgroundColor: wrongQuestions[0] && wrongQuestions.includes('C') ? '#C53E' : 'rgba(158, 222, 254, 1)',\n                  borderRadius: 8,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: 'rgba(35, 112, 157, 1)',\n                  borderWidth: 3,\n                  borderColor: answered.already && answered.letter == 'C' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'C' && answered.already ? '#C53D34' : '#007FC7'\n                },\n                onTouchStart: function onTouchStart() {\n                  if (already == false) {\n                    answer('C');\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.answer,\n                  children: answerAxios.res[0].questions[question].letter_c\n                })\n              })]\n            }), _jsxs(View, {\n              style: styles.configAnswer,\n              children: [_jsx(View, {\n                style: styles.divLetterAnswer,\n                children: _jsx(Text, {\n                  style: styles.letterAnswer,\n                  children: \"D\"\n                })\n              }), _jsx(View, {\n                style: {\n                  width: 230,\n                  height: 40,\n                  backgroundColor: wrongQuestions[0] && wrongQuestions.includes('D') ? '#C53E' : 'rgba(158, 222, 254, 1)',\n                  borderRadius: 8,\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  color: 'rgba(35, 112, 157, 1)',\n                  borderWidth: 3,\n                  borderColor: answered.already && answered.letter == 'D' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'D' && answered.already ? '#C53D34' : '#007FC7'\n                },\n                onTouchStart: function onTouchStart() {\n                  if (already == false) {\n                    answer('D');\n                  }\n                },\n                children: _jsx(Text, {\n                  style: styles.answer,\n                  children: answerAxios.res[0].questions[question].letter_d\n                })\n              })]\n            })]\n          })]\n        })]\n      }) : _jsx(Text, {\n        children: \"Esperando\"\n      })\n    }) : _jsx(Text, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  buttonSair: {\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.80)'\n  },\n  cards: {\n    flexDirection: 'row'\n  },\n  box: {\n    width: 300,\n    padding: 20,\n    backgroundColor: '#004973',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2,\n    borderColor: '#FFF',\n    borderRadius: 8\n  },\n  textWarning: {\n    width: 227,\n    fontSize: 20,\n    color: '#FFF',\n    textAlign: 'center'\n  },\n  buttonOk: {\n    width: 91,\n    height: 32,\n    borderRadius: 8,\n    backgroundColor: '#91BDD8',\n    alignItems: 'center'\n  },\n  textButtonOk: {\n    color: 'black',\n    fontSize: 20\n  },\n  header: {\n    width: '100%',\n    height: 93,\n    alignItems: 'center',\n    marginTop: 50,\n    backgroundColor: 'rgba(35, 112, 157, 1)'\n  },\n  initialText: {\n    color: '#fff',\n    fontSize: 20,\n    fontWeight: '500',\n    marginTop: 16\n  },\n  textArea: {\n    width: '100%',\n    height: 250,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    borderWidth: 3,\n    borderColor: 'rgba(0, 0, 0, 1)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 16\n  },\n  answerArea: {\n    width: '100%',\n    height: 242,\n    borderRadius: 8,\n    backgroundColor: 'rgba(145, 189, 216, 0.18)',\n    marginTop: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 30\n  },\n  configAnswer: {\n    width: '90%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 5\n  },\n  divLetterAnswer: {\n    width: 42,\n    height: 42,\n    backgroundColor: 'rgba(158, 222, 254, 1)',\n    borderRadius: 100,\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'rgba(35, 112, 157, 1)',\n    borderWidth: 3,\n    borderColor: '#007FC7'\n  },\n  letterAnswer: {\n    fontSize: 20,\n    fontWeight: '800'\n  },\n  answer: {\n    fontSize: 14,\n    fontWeight: '800'\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","useContext","Text","View","StyleSheet","ScrollView","Modal","TouchableOpacity","Alert","TipHalf","TipCarts","A","Two","Three","Back","useAxios","UserContext","io","jsx","_jsx","jsxs","_jsxs","GameQuestion","_ref","route","navigation","_useContext","dataUser","_useAxios","callAxios","answerAxios","_useState","letter","already","correct","_useState2","_slicedToArray","answered","setAnswered","_useState3","_useState4","question","setQuestion","_route$params","params","roomId","flashId","_useState5","_useState6","setAlready","_useState7","_useState8","waiting","setWaiting","_useState9","_useState10","corrects","setCorrects","_useState11","_useState12","wrongs","setWrongs","_useState13","_useState14","socket","setSocket","_useState15","_useState16","resetCount","setResetCount","_useState17","_useState18","result","setResult","_useState19","_useState20","count","setCount","_useState21","_useState22","afk","setAfk","_useState23","_useState24","clicked1","setClicked1","_useState25","_useState26","clicked2","setClicked2","_useState27","_useState28","wrongQuestions","setWrongsQuestions","_useState29","_useState30","alert","setAlert","_useState31","_useState32","cardSelected","setCardSelected","_useState33","_useState34","quantityWrongs","setQuantityWrongs","_useState35","_useState36","a","setA","_useState37","first","_useState38","yourTime","setYourTime","console","log","cards","width","navigate","total","res","questions","length","emit","room_id","on","msg","transports","_questions","apply","arguments","_asyncToGenerator","addListener","e","preventDefault","text","style","onPress","dispatch","data","action","interval","setInterval","endQuestion","clearInterval","find","correct_letter","tips","n","letters","map","x","r","Math","random","sort","b","slice","setTimeout","finishGame","results","name","wrong","image","prev","concat","_toConsumableArray","answer","ready","flex","backgroundColor","children","animationType","transparent","visible","onRequestClose","styles","buttonSair","box","textWarning","onTouchStart","floor","marginRight","buttonOk","textButtonOk","contentContainerStyle","alignItems","header","color","fontSize","fontWeight","marginTop","height","initialText","textArea","nestedScrollEnabled","multiline","margin","flexDirection","justifyContent","opacity","answerArea","configAnswer","divLetterAnswer","letterAnswer","includes","borderRadius","borderWidth","borderColor","letter_a","letter_b","letter_c","letter_d","create","padding","textAlign","marginBottom"],"sources":["C:/Users/Lucas/Desktop/Projetos/Istudy/src/screens/GameQuestion.js"],"sourcesContent":["import React, {useEffect, useState, useContext} from 'react'\nimport { Text, View, StyleSheet, ScrollView, Modal, TouchableOpacity, Alert} from 'react-native';\nimport  TipHalf from '../../assets/ImageIcons/tipHalf.svg'\nimport  TipCarts  from '../../assets/ImageIcons/tipCarts.svg'\nimport  A  from '../../assets/ImageIcons/Group-1.svg'\nimport  Two  from '../../assets/ImageIcons/Group-3.svg'\nimport  Three  from '../../assets/ImageIcons/Group-2.svg'\nimport  Back  from '../../assets/ImageIcons/Group.svg'\nimport useAxios from '../hooks/useAxios';\nimport { UserContext } from '../../App';\nimport io from \"socket.io-client/dist/socket.io\";\n\n\nexport function GameQuestion({route ,navigation}) {\n  const {dataUser} = useContext(UserContext)\n  const {callAxios, answerAxios} = useAxios()\n  const [answered, setAnswered] = useState({letter: '', already: false, correct: false})\n  const [question, setQuestion] = useState(0)\n  const {roomId, flashId} = route.params\n  const [already, setAlready] = useState(false)\n  const [waiting, setWaiting] = useState(false)\n  const [corrects, setCorrects] = useState(0)\n  const [wrongs, setWrongs] = useState(0)\n  const [socket, setSocket] = useState('')\n  const [resetCount, setResetCount] = useState(false)\n  const [result, setResult] = useState([])\n  const [count, setCount] = useState(50)\n  const [afk, setAfk] = useState(0)\n  const [clicked1, setClicked1] = useState(false)\n  const [clicked2, setClicked2] = useState(false)\n  const [wrongQuestions, setWrongsQuestions] = useState([])\n  const [alert, setAlert] = useState(false)\n  const [cardSelected, setCardSelected] = useState()\n  const [quantityWrongs, setQuantityWrongs] = useState(0)\n  const [a, setA] = useState(false)\n  const [yourTime, setYourTime] = useState(route.params.first)\n\n  console.log(yourTime)\n  \n  const cards = [<Back width='50'/>, <A width='50'/>, <Two width='50'/>, <Three width='50'/>]\n\n  useEffect(() => {\n    if (result[1]) {\n      navigation.navigate('GameResult', {result, total: answerAxios.res[0].questions.length})\n    }\n  }, [result])\n\n  useEffect(() => {\n    if(socket != '') {\n      socket.emit('left_game', {room_id: roomId, afk: false})\n      socket.on('resAfk', (msg) => {\n        if(msg.afk && a == false) {\n          navigation.navigate('Home')\n        }\n      })\n    }\n  }, [socket])\n\n  useEffect(() => {\n    setSocket(io(\"https://istudy-online-production.up.railway.app\", {\n      transports: [\"websocket\"]\n    }))\n\n    async function questions() {\n      await callAxios('cards/questions/' + flashId, '', 'get')\n    }\n    questions()\n  }, [])\n\n  useEffect(\n    () =>\n      navigation.addListener('beforeRemove', (e) => {\n        e.preventDefault();\n        if(a == false) {\n          Alert.alert(\n            'Deixar partida?',\n            'Deseja mesmo deixar a partida? (Se não clicou em nenhum botão para sair, possivelmente seu adversario está AFK)',\n            [\n              { text: \"Não sair\", style: 'cancel', onPress: () => {} },\n              {\n                text: 'Sair',\n                style: 'destructive',\n                onPress: () => {\n                  setA(true)\n                  socket.emit('finish_game', {room_id: roomId})\n                  socket.on('disconnect')\n                  socket.emit('left_game', {room_id: 6931, afk: true})\n                  navigation.dispatch(e.data.action)\n                },\n              },\n            ]\n          )\n        };\n      }),\n    [navigation, socket]\n  );\n\n  useEffect(() => {\n    if(resetCount == false) {\n      const interval = setInterval(() => {\n        if(count == 0) {\n          setAfk(afk + 1)\n          endQuestion()\n        } else {\n          setCount(count - 1)\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [count])\n\n  useEffect(() => {\n    if(wrongQuestions.find((letter) => letter == answerAxios.res[0].questions[question].correct_letter)) {\n      tips(2)\n    } \n  }, [wrongQuestions])\n\n  function tips(n) {\n    const letters = ['A', 'B', 'C', 'D']\n    setWrongsQuestions(letters\n    .map(x => ({ x, r: Math.random() }))\n    .sort((a, b) => a.r - b.r)\n    .map(a => a.x)\n    .slice(0, quantityWrongs > 0 ? quantityWrongs : n))\n\n    setTimeout(() => setAlert(false), 1000)\n  }\n\n  function finishGame() {\n    socket.emit('finish_game', {room_id: roomId, results: {name: dataUser.name , correct: corrects, wrong: wrongs, image: dataUser.image}})\n    socket.on('resEnd', (res) => setResult(prev => [...prev, res])).on('disconnect')\n  }\n\n  function answer(letter) {\n    if(answerAxios.res[0].questions[question].correct_letter == letter) {\n     setAnswered({letter: letter, already: true, correct: true})\n     setAlready(true)\n     setCorrects(corrects + 1)\n    } else {\n      setAnswered({letter: letter, already: true, correct: false})\n      setAlready(true)\n      setWrongs(wrongs + 1)\n    }\n    setResetCount(true)\n    endQuestion()\n  }\n\n  function endQuestion() {\n    socket.emit('answer_game', {room_id: roomId})\n\n    socket.on('resAnswer', (msg) => {\n      if(msg.ready) {\n        setAnswered({letter: '', already: false, correct: false})\n        setAlready(false)\n        setWaiting(false)\n        setResetCount(false)\n        setWrongsQuestions([])\n        setQuantityWrongs(0)\n        setCount(50)\n        if(question + 1 < answerAxios.res[0].questions.length) {\n          setQuestion(question + 1)\n        } else {\n          finishGame()\n        }\n      } else {\n        setWaiting(true)\n      }\n    })\n  }\n\n  return (\n    <View style={{flex:1, backgroundColor: '#005483'}}>\n\n      <Modal\n        animationType=\"slide\"\n        transparent={true}\n        visible={alert}\n        onRequestClose={() => {\n          setAlert(!alert);\n        }}>\n\n        <View style={styles.buttonSair}>\n          <View style={styles.box}>\n            <Text style={styles.textWarning}>Escolha uma carta</Text>\n            <View style={styles.cards}>\n              <View onTouchStart={() => {\n                setCardSelected(1) \n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0)\n                setClicked1(true)\n                tips()\n              }} style={{marginRight: 8}}>{cardSelected == 1 ? cards[quantityWrongs] : <Back width='50'/>}</View>\n              <View onTouchStart={() => {\n                setCardSelected(2) \n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0)\n                setClicked1(true)\n                tips()\n              }} style={{marginRight: 8}}>{cardSelected == 2 ? cards[quantityWrongs] : <Back width='50'/>}</View>\n              <View onTouchStart={() => {\n                setCardSelected(3) \n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0)\n                setClicked1(true)\n                tips()\n              }} style={{marginRight: 8}}>{cardSelected == 3 ? cards[quantityWrongs] : <Back width='50'/>}</View>\n              <View onTouchStart={() => {\n                setCardSelected(4) \n                setQuantityWrongs(Math.floor(Math.random() * (3 - 0 + 1)) + 0)\n                setClicked1(true)\n                tips()\n              }}>{cardSelected == 4 ? cards[quantityWrongs] : <Back width='50'/>}</View>\n            </View>\n            {cardSelected ? <Text></Text> : <TouchableOpacity style={styles.buttonOk} onPress={() => {setAlert(!alert)\n            setClicked1(false)}}>\n              <Text style={styles.textButtonOk}>Cancelar</Text>\n            </TouchableOpacity>}\n          </View>\n        </View>\n      </Modal>\n\n      {answerAxios.res && answerAxios.res[0] ?\n        <View>\n          {yourTime ? <ScrollView contentContainerStyle={{width: '100%', alignItems: 'center'}}>\n          <View style={styles.header}>\n            <Text onPress={() => navigation.navigate('GameAnswer')} style={{color: '#fff', fontSize: 20, fontWeight: '500', marginTop: 25}}>{`0:${count}`}</Text>\n            <View style={{width: '94%', height: 3, backgroundColor: 'rgba(193, 193, 193, 1)'}}>\n              <View style={{width: `${count + count}%`, height: '100%', backgroundColor: '#fff'}}></View>\n            </View>\n          </View>\n\n       <View style={{width: '80%', alignItems: 'center'}}>\n        {waiting ? <Text style={{fontSize: 20, color: 'white'}}>Aguardando o outro jogador...</Text> : <Text></Text>}\n        <Text style={styles.initialText}> {question + 1 + '/' + answerAxios.res[0].questions.length} </Text>\n\n        <View style={styles.textArea}>\n          <ScrollView nestedScrollEnabled contentContainerStyle={{width: '100%'}}>\n          <Text  multiline={true} style={{fontSize: 16, fontWeight: '500', margin:20}}>{answerAxios.res[0].questions[question].text}</Text>\n          </ScrollView>\n        </View>\n\n        <View style={{width: '80%', flexDirection: 'row', justifyContent: 'space-between', marginTop: 15}}>\n          <View style={{opacity: clicked1 ? 0.3 : 1}} onTouchStart={() => {\n            if(clicked1 == false && already == false) {\n              setAlert(true)\n              setClicked1(true)\n          }}}><TipCarts /></View>\n          <View style={{opacity: clicked2 ? 0.3 : 1}} onTouchStart={() => {\n            if(clicked2 == false && already == false) {\n            tips(2)\n            setClicked2(true)\n          }}}><TipHalf /></View>\n        </View>\n      \n          <View style={styles.answerArea}>\n            <View style={styles.configAnswer}>\n              <View style={styles.divLetterAnswer}><Text style={styles.letterAnswer}>A</Text></View>\n              <View style={{\n                width: 230, \n                height: 40, \n                backgroundColor:  wrongQuestions[0] && wrongQuestions.includes('A') ? '#C53E' : 'rgba(158, 222, 254, 1)', \n                borderRadius: 8, \n                alignItems:'center', \n                justifyContent: 'center', \n                color: 'rgba(35, 112, 157, 1)',\n                borderWidth: 3,\n                borderColor: answered.already && answered.letter == 'A' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'A' && answered.already? '#C53D34' :'#007FC7'\n              }} onTouchStart={() => {\n                if(already == false) {\n                  answer('A')\n                }\n              }}><Text style={styles.answer}>{answerAxios.res[0].questions[question].letter_a}</Text></View>\n            </View>\n\n            <View style={styles.configAnswer}>\n              <View style={styles.divLetterAnswer}><Text style={styles.letterAnswer}>B</Text></View>\n              <View style={{\n                width: 230, \n                height: 40, \n                backgroundColor: wrongQuestions[0] && wrongQuestions.includes('B') ? '#C53E' : 'rgba(158, 222, 254, 1)', \n                borderRadius: 8, \n                alignItems:'center', \n                justifyContent: 'center', \n                color: 'rgba(35, 112, 157, 1)',\n                borderWidth: 3,\n                borderColor: answered.already && answered.letter == 'B' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'B' && answered.already? '#C53D34' :'#007FC7'\n              }} onTouchStart={() => {\n                if(already == false) {\n                  answer('B')\n                }\n              }}><Text style={styles.answer}>{answerAxios.res[0].questions[question].letter_b}</Text></View>\n            </View>\n\n            <View style={styles.configAnswer}>\n              <View style={styles.divLetterAnswer}><Text style={styles.letterAnswer}>C</Text></View>\n              <View style={{\n                width: 230, \n                height: 40, \n                backgroundColor: wrongQuestions[0] && wrongQuestions.includes('C') ? '#C53E' : 'rgba(158, 222, 254, 1)', \n                borderRadius: 8, \n                alignItems:'center', \n                justifyContent: 'center', \n                color: 'rgba(35, 112, 157, 1)',\n                borderWidth: 3,\n                borderColor: answered.already && answered.letter == 'C' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'C' && answered.already? '#C53D34' :'#007FC7'\n              }} onTouchStart={() => {\n                if(already == false) {\n                  answer('C')\n                }\n              }}><Text style={styles.answer}>{answerAxios.res[0].questions[question].letter_c}</Text></View>\n            </View>\n\n            <View style={styles.configAnswer}>\n              <View style={styles.divLetterAnswer}><Text style={styles.letterAnswer}>D</Text></View>\n              <View style={{\n                width: 230, \n                height: 40, \n                backgroundColor: wrongQuestions[0] && wrongQuestions.includes('D') ? '#C53E' : 'rgba(158, 222, 254, 1)', \n                borderRadius: 8, \n                alignItems:'center', \n                justifyContent: 'center', \n                color: 'rgba(35, 112, 157, 1)',\n                borderWidth: 3,\n                borderColor: answered.already && answered.letter == 'D' && answered.correct ? '#35A700' : answered.correct == false && answered.letter == 'D' && answered.already? '#C53D34' :'#007FC7'\n              }} onTouchStart={() => {\n                if(already == false) {\n                  answer('D')\n                }\n              }}><Text style={styles.answer}>{answerAxios.res[0].questions[question].letter_d}</Text></View>\n            </View>\n          </View>\n        </View> \n      </ScrollView> : <Text>Esperando</Text>}\n        </View>\n      : <Text></Text>}\n      \n    </View>\n  )\n}\nconst styles = StyleSheet.create({\n\n  buttonSair:{\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0, 0, 0, 0.80)',\n  },\n  cards: {\n    flexDirection: 'row'\n  },\n  box:{\n    width:300,\n    padding: 20,\n    backgroundColor: '#004973',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 2, \n    borderColor: '#FFF',\n    borderRadius: 8,\n  },\n  textWarning:{\n    width: 227,\n    fontSize: 20,\n    color: '#FFF',\n    textAlign: 'center',\n  },\n  buttonOk:{\n    width:91,\n    height:32,\n    borderRadius: 8,\n    backgroundColor: '#91BDD8',\n    alignItems: 'center'\n  },\n  textButtonOk:{\n    color: 'black',\n    fontSize: 20,\n  },\n\n\n  header: {\n    width: '100%', \n    height: 93, \n    alignItems: 'center', \n    marginTop: 50, \n    backgroundColor: 'rgba(35, 112, 157, 1)'\n  },\n\n  initialText:{\n    color: '#fff', \n    fontSize: 20, \n    fontWeight: '500', \n    marginTop: 16\n  },\n  textArea:{\n    width: '100%', \n    height: 250, \n    backgroundColor:'#fff', \n    borderRadius: 10, \n    borderWidth: 3, \n    borderColor: 'rgba(0, 0, 0, 1)', \n    justifyContent: 'center', \n    alignItems:'center', \n    marginTop: 16\n  },\n  answerArea: {\n    width: '100%', \n    height: 242, \n    borderRadius: 8, \n    backgroundColor: 'rgba(145, 189, 216, 0.18)', \n    marginTop: 15, \n    justifyContent: 'center', \n    alignItems:'center', \n    marginBottom: 30\n  },\n  configAnswer: {\n    width: '90%', \n    flexDirection: 'row', \n    justifyContent: 'space-between', \n    margin: 5\n  },\n  divLetterAnswer: {\n    width: 42, \n    height: 42, \n    backgroundColor: 'rgba(158, 222, 254, 1)', \n    borderRadius: 100, \n    alignItems:'center', \n    justifyContent: 'center', \n    color: 'rgba(35, 112, 157, 1)',\n    borderWidth: 3,\n    borderColor: '#007FC7'\n  }, \n  letterAnswer: {\n    fontSize: 20, \n    fontWeight: '800'\n  },\n  answer: {\n    fontSize: 14, \n    fontWeight: '800'\n  }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}