{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withTheme } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TRACK_SIZE = 4;\nvar THUMB_SIZE = 40;\nvar TRACK_STYLE = Platform.select({\n  web: 0,\n  default: -1\n});\nvar DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n    useNativeDriver: true\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n    useNativeDriver: true\n  }\n};\n\nvar getBoundedValue = function getBoundedValue(value, maximumValue, minimumValue) {\n  return Math.max(Math.min(value, maximumValue), minimumValue);\n};\n\nvar Rect = function () {\n  function Rect(x, y, width, height) {\n    _classCallCheck(this, Rect);\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  _createClass(Rect, [{\n    key: \"containsPoint\",\n    value: function containsPoint(x, y) {\n      return x >= this.x && y >= this.y && x <= this.x + this.width && y <= this.y + this.height;\n    }\n  }]);\n\n  return Rect;\n}();\n\nvar Slider = function Slider(props) {\n  var _previousLeft = useRef(0);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      allMeasured = _useState2[0],\n      setAllMeasured = _useState2[1];\n\n  var _useState3 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      containerSize = _useState4[0],\n      setContainerSize = _useState4[1];\n\n  var _useState5 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      trackSize = _useState6[0],\n      setTrackSize = _useState6[1];\n\n  var _useState7 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      thumbSize = _useState8[0],\n      setThumbSize = _useState8[1];\n\n  var containerSizeValue = useRef(containerSize);\n  var trackSizeValue = useRef(trackSize);\n  var thumbSizeValue = useRef(thumbSize);\n  var isVertical = useRef(props.orientation === 'vertical');\n\n  var _useState9 = useState(new Animated.Value(getBoundedValue(props.value || 0, props.maximumValue || 1, props.minimumValue || 0))),\n      _useState10 = _slicedToArray(_useState9, 1),\n      value = _useState10[0];\n\n  useEffect(function () {\n    containerSizeValue.current = containerSize;\n  }, [containerSize]);\n  useEffect(function () {\n    trackSizeValue.current = trackSize;\n  }, [trackSize]);\n  useEffect(function () {\n    thumbSizeValue.current = thumbSize;\n  }, [thumbSize]);\n\n  var measureContainer = function measureContainer(x) {\n    handleMeasure('containerSize', x);\n  };\n\n  var measureTrack = function measureTrack(x) {\n    handleMeasure('trackSize', x);\n  };\n\n  var measureThumb = function measureThumb(x) {\n    handleMeasure('thumbSize', x);\n  };\n\n  var handleMeasure = function handleMeasure(name, x) {\n    var _x$nativeEvent$layout = x.nativeEvent.layout,\n        layoutWidth = _x$nativeEvent$layout.width,\n        layoutHeight = _x$nativeEvent$layout.height;\n    var width = isVertical.current ? layoutHeight : layoutWidth;\n    var height = isVertical.current ? layoutWidth : layoutHeight;\n    var size = {\n      width: width,\n      height: height\n    };\n\n    if (name === 'containerSize') {\n      setContainerSize(size);\n    }\n\n    if (name === 'thumbSize') {\n      setThumbSize(size);\n    }\n\n    if (name === 'trackSize') {\n      setTrackSize(size);\n    }\n\n    if (thumbSize && trackSize && containerSize) {\n      setAllMeasured(true);\n    }\n  };\n\n  var currentPropValue = useRef(props.value || 0);\n  var prevPropValue = useRef(0);\n  var didMountRef = useRef(false);\n  var setCurrentValue = React.useCallback(function (value1) {\n    value.setValue(value1);\n  }, [value]);\n  React.useEffect(function () {\n    setCurrentValue(props.value || 0);\n  }, [props.value, setCurrentValue]);\n  useEffect(function () {\n    prevPropValue.current = props.value || 0;\n\n    if (didMountRef.current) {\n      var newValue = getBoundedValue(props.value || 0, props.maximumValue || 1, props.minimumValue || 0);\n\n      if (prevPropValue.current !== newValue) {\n        if (props.animateTransitions) {\n          setCurrentValueAnimated(new Animated.Value(newValue));\n        } else {\n          setCurrentValue(newValue);\n        }\n      }\n    } else {\n      didMountRef.current = true;\n    }\n  });\n\n  var setCurrentValueAnimated = function setCurrentValueAnimated(value1) {\n    var animationType = props.animationType;\n\n    var animationConfig = _extends({}, DEFAULT_ANIMATION_CONFIGS[animationType || 'timing'], props.animationConfig, {\n      toValue: value1\n    });\n\n    Animated[animationType || 'timing'](value, animationConfig).start();\n  };\n\n  var handleMoveShouldSetPanResponder = function handleMoveShouldSetPanResponder() {\n    if (!TRACK_STYLE) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var handlePanResponderGrant = function handlePanResponderGrant() {\n    _previousLeft.current = getThumbLeft(currentPropValue.current);\n    fireChangeEvent('onSlidingStart');\n  };\n\n  var handlePanResponderMove = function handlePanResponderMove(_, gestureState) {\n    if (props.disabled) {\n      return;\n    }\n\n    setCurrentValue(getValue(gestureState));\n    fireChangeEvent('onValueChange');\n  };\n\n  var handlePanResponderRequestEnd = function handlePanResponderRequestEnd() {\n    return false;\n  };\n\n  var handlePanResponderEnd = function handlePanResponderEnd(_, gestureState) {\n    if (props.disabled) {\n      return;\n    }\n\n    setCurrentValue(getValue(gestureState));\n    fireChangeEvent('onSlidingComplete');\n  };\n\n  var thumbHitTest = function thumbHitTest(_ref) {\n    var nativeEvent = _ref.nativeEvent;\n    var thumbTouchRect = getThumbTouchRect();\n    return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n  };\n\n  var handleStartShouldSetPanResponder = function handleStartShouldSetPanResponder(e) {\n    if (!props.allowTouchTrack && !TRACK_STYLE) {\n      return thumbHitTest(e);\n    }\n\n    if (!trackStyle) {\n      setCurrentValue(getOnTouchValue(e));\n    }\n\n    fireChangeEvent('onValueChange');\n    return true;\n  };\n\n  var fireChangeEvent = function fireChangeEvent(event) {\n    var _a;\n\n    if (props === null || props === void 0 ? void 0 : props[event]) {\n      (_a = props === null || props === void 0 ? void 0 : props[event]) === null || _a === void 0 ? void 0 : _a.call(props, currentPropValue.current);\n    }\n  };\n\n  var getOnTouchValue = function getOnTouchValue(_ref2) {\n    var nativeEvent = _ref2.nativeEvent;\n    var location = isVertical.current ? nativeEvent.locationY : nativeEvent.locationX;\n    return getValueForTouch(location);\n  };\n\n  var getValueForTouch = function getValueForTouch(location) {\n    var length = containerSizeValue.current.width - thumbSizeValue.current.width;\n    var ratio = location / length;\n    var newValue = ratio * ((props.maximumValue || 1) - (props.minimumValue || 0));\n\n    if (props.step) {\n      newValue = Math.round(newValue / props.step) * props.step;\n    }\n\n    return getBoundedValue(newValue + (props.minimumValue || 0), props.maximumValue || 1, props.minimumValue || 0);\n  };\n\n  var getTouchOverflowSize = function getTouchOverflowSize() {\n    var thumbTouchSize = props.thumbTouchSize;\n    var size = {};\n\n    if (allMeasured === true) {\n      size.width = Math.max(0, ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE) - thumbSizeValue.current.width);\n      size.height = Math.max(0, ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE) - containerSizeValue.current.height);\n    }\n\n    return size;\n  };\n\n  var getTouchOverflowStyle = function getTouchOverflowStyle() {\n    var _getTouchOverflowSize = getTouchOverflowSize(),\n        width = _getTouchOverflowSize.width,\n        height = _getTouchOverflowSize.height;\n\n    var touchOverflowStyle = {};\n\n    if (width !== undefined && height !== undefined) {\n      var verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n      var horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  };\n\n  var getValue = function getValue(gestureState) {\n    var location = _previousLeft.current + (isVertical.current ? gestureState.dy : gestureState.dx);\n    return getValueForTouch(location);\n  };\n\n  React.useEffect(function () {\n    var listenerID = value.addListener(function (obj) {\n      currentPropValue.current = obj.value;\n    });\n    return function () {\n      value.removeListener(listenerID);\n    };\n  });\n\n  var getRatio = function getRatio(value1) {\n    return (value1 - (props.minimumValue || 0)) / ((props.maximumValue || 1) - (props.minimumValue || 0));\n  };\n\n  var getThumbLeft = function getThumbLeft(value1) {\n    var ratio = getRatio(value1);\n    return ratio * (containerSizeValue.current.width - thumbSizeValue.current.width);\n  };\n\n  var getThumbTouchRect = function getThumbTouchRect() {\n    var thumbTouchSize = props.thumbTouchSize;\n    var touchOverflowSize = getTouchOverflowSize();\n    var height = (touchOverflowSize === null || touchOverflowSize === void 0 ? void 0 : touchOverflowSize.height) / 2 + (containerSizeValue.current.height - ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE)) / 2;\n    var width = touchOverflowSize.width / 2 + getThumbLeft(currentPropValue.current) + (thumbSizeValue.current.width - ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE)) / 2;\n\n    if (isVertical.current) {\n      return new Rect(height, width, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE);\n    }\n\n    return new Rect(width, height, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE);\n  };\n\n  var renderDebugThumbTouchRect = function renderDebugThumbTouchRect(thumbLeft) {\n    var thumbTouchRect = getThumbTouchRect();\n    var positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height\n    };\n    return _jsx(Animated.View, {\n      style: positionStyle,\n      pointerEvents: \"none\"\n    });\n  };\n\n  var getMinimumTrackStyles = function getMinimumTrackStyles(thumbStart) {\n    var minimumTrackStyle = {\n      position: 'absolute'\n    };\n\n    if (isVertical.current) {\n      minimumTrackStyle.height = Animated.add(thumbStart, thumbSizeValue.current.height / 2);\n      minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n    } else {\n      minimumTrackStyle.width = Animated.add(thumbStart, thumbSizeValue.current.width / 2);\n      minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n    }\n\n    return minimumTrackStyle;\n  };\n\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: handleStartShouldSetPanResponder,\n    onMoveShouldSetPanResponder: handleMoveShouldSetPanResponder,\n    onPanResponderGrant: handlePanResponderGrant,\n    onPanResponderMove: handlePanResponderMove,\n    onPanResponderRelease: handlePanResponderEnd,\n    onPanResponderTerminationRequest: handlePanResponderRequestEnd,\n    onPanResponderTerminate: handlePanResponderEnd\n  })).current;\n\n  var minimumValue = props.minimumValue,\n      maximumValue = props.maximumValue,\n      minimumTrackTintColor = props.minimumTrackTintColor,\n      maximumTrackTintColor = props.maximumTrackTintColor,\n      thumbTintColor = props.thumbTintColor,\n      containerStyle = props.containerStyle,\n      style = props.style,\n      trackStyle = props.trackStyle,\n      thumbStyle = props.thumbStyle,\n      thumbProps = props.thumbProps,\n      debugTouchArea = props.debugTouchArea,\n      other = __rest(props, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"thumbProps\", \"debugTouchArea\"]);\n\n  var mainStyles = containerStyle || styles;\n  var appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n  var thumbStart = value.interpolate({\n    inputRange: [minimumValue || 0, maximumValue || 1],\n    outputRange: [0, containerSize.width - thumbSize.width]\n  });\n  var valueVisibleStyle = {};\n\n  if (!allMeasured) {\n    valueVisibleStyle.height = 0;\n    valueVisibleStyle.width = 0;\n  }\n\n  var minimumTrackStyle = _extends(_extends(_extends({}, getMinimumTrackStyles(thumbStart)), {\n    backgroundColor: minimumTrackTintColor\n  }), valueVisibleStyle);\n\n  var touchOverflowStyle = getTouchOverflowStyle();\n  return _jsxs(View, _objectSpread(_objectSpread({}, other), {}, {\n    style: StyleSheet.flatten([isVertical.current ? mainStyles.containerVertical : mainStyles.containerHorizontal, style]),\n    onLayout: measureContainer,\n    accessibilityRole: \"adjustable\",\n    accessibilityValue: {\n      min: minimumValue,\n      max: maximumValue,\n      now: props.value\n    },\n    children: [_jsx(View, {\n      style: StyleSheet.flatten([mainStyles.track, isVertical.current ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, {\n        backgroundColor: maximumTrackTintColor\n      }]),\n      onLayout: measureTrack\n    }), _jsx(Animated.View, {\n      style: StyleSheet.flatten([mainStyles.track, isVertical.current ? mainStyles.trackVertical : mainStyles.trackHorizontal, appliedTrackStyle, minimumTrackStyle])\n    }), _jsx(SliderThumb, _objectSpread({\n      isVisible: allMeasured,\n      onLayout: measureThumb,\n      style: thumbStyle,\n      color: thumbTintColor,\n      start: thumbStart,\n      vertical: isVertical.current\n    }, thumbProps)), _jsx(View, _objectSpread(_objectSpread({\n      style: StyleSheet.flatten([styles.touchArea, touchOverflowStyle])\n    }, panResponder.panHandlers), {}, {\n      children: debugTouchArea === true && renderDebugThumbTouchRect(thumbStart)\n    }))]\n  }));\n};\n\nvar SliderThumb = function SliderThumb(_a) {\n  var Component = _a.Component,\n      isVisible = _a.isVisible,\n      onLayout = _a.onLayout,\n      style = _a.style,\n      start = _a.start,\n      color = _a.color,\n      vertical = _a.vertical,\n      props = __rest(_a, [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"]);\n\n  var ThumbComponent = Component || Animated.View;\n  var axis = vertical ? 'translateY' : 'translateX';\n  var thumbPosition = [_defineProperty({}, axis, start)];\n  var styleTransform = style && style.transform || [];\n  var visibleStyle = isVisible ? {} : {\n    height: 0,\n    width: 0\n  };\n  return _jsx(ThumbComponent, _objectSpread({\n    testID: \"sliderThumb\",\n    onLayout: onLayout,\n    style: StyleSheet.flatten([_extends({\n      backgroundColor: color,\n      transform: [].concat(thumbPosition, _toConsumableArray(styleTransform))\n    }, visibleStyle), styles.thumb, style])\n  }, props));\n};\n\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  minimumTrackTintColor: '#3f3f3f',\n  maximumTrackTintColor: '#b3b3b3',\n  allowTouchTrack: false,\n  thumbTintColor: 'red',\n  thumbTouchSize: {\n    width: THUMB_SIZE,\n    height: THUMB_SIZE\n  },\n  debugTouchArea: false,\n  animationType: 'timing',\n  orientation: 'horizontal'\n};\nvar styles = StyleSheet.create({\n  containerHorizontal: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  containerVertical: {\n    width: 40,\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  track: {\n    borderRadius: TRACK_SIZE / 2\n  },\n  trackHorizontal: {\n    height: TRACK_SIZE\n  },\n  trackVertical: {\n    flex: 1,\n    width: TRACK_SIZE\n  },\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2\n  },\n  touchArea: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  debugThumbTouchArea: {\n    position: 'absolute',\n    backgroundColor: 'green',\n    opacity: 0.5\n  }\n});\nexport { Slider };\nexport default withTheme(Slider, 'Slider');","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","useEffect","useRef","useState","withTheme","TRACK_SIZE","THUMB_SIZE","TRACK_STYLE","Platform","select","web","default","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","useNativeDriver","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Math","max","min","Rect","x","y","width","height","Slider","props","_previousLeft","allMeasured","setAllMeasured","containerSize","setContainerSize","trackSize","setTrackSize","thumbSize","setThumbSize","containerSizeValue","trackSizeValue","thumbSizeValue","isVertical","orientation","Animated","Value","current","measureContainer","handleMeasure","measureTrack","measureThumb","name","nativeEvent","layout","layoutWidth","layoutHeight","size","currentPropValue","prevPropValue","didMountRef","setCurrentValue","useCallback","value1","setValue","newValue","animateTransitions","setCurrentValueAnimated","animationType","animationConfig","toValue","start","handleMoveShouldSetPanResponder","handlePanResponderGrant","getThumbLeft","fireChangeEvent","handlePanResponderMove","_","gestureState","disabled","getValue","handlePanResponderRequestEnd","handlePanResponderEnd","thumbHitTest","thumbTouchRect","getThumbTouchRect","containsPoint","locationX","locationY","handleStartShouldSetPanResponder","allowTouchTrack","trackStyle","getOnTouchValue","event","_a","location","getValueForTouch","ratio","step","round","getTouchOverflowSize","thumbTouchSize","getTouchOverflowStyle","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","dy","dx","listenerID","addListener","obj","removeListener","getRatio","touchOverflowSize","renderDebugThumbTouchRect","thumbLeft","positionStyle","left","top","getMinimumTrackStyles","thumbStart","minimumTrackStyle","position","add","panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","onPanResponderTerminationRequest","onPanResponderTerminate","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","containerStyle","style","thumbStyle","thumbProps","other","mainStyles","styles","appliedTrackStyle","StyleSheet","flatten","track","interpolate","inputRange","outputRange","valueVisibleStyle","containerVertical","containerHorizontal","now","trackVertical","trackHorizontal","touchArea","panHandlers","SliderThumb","Component","isVisible","onLayout","color","vertical","ThumbComponent","View","axis","thumbPosition","styleTransform","transform","visibleStyle","thumb","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea"],"sources":["/home/logic2606/Documentos/Dev/IStudy Project/Istudy-Front/node_modules/react-native-elements/dist/slider/Slider.js"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, StyleSheet, Animated, Easing, PanResponder, Platform, } from 'react-native';\nimport { withTheme } from '../config';\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 40;\nconst TRACK_STYLE = Platform.select({ web: 0, default: -1 });\nconst DEFAULT_ANIMATION_CONFIGS = {\n    spring: {\n        friction: 7,\n        tension: 100,\n        useNativeDriver: true,\n    },\n    timing: {\n        duration: 150,\n        easing: Easing.inOut(Easing.ease),\n        delay: 0,\n        useNativeDriver: true,\n    },\n};\nconst getBoundedValue = (value, maximumValue, minimumValue) => {\n    return Math.max(Math.min(value, maximumValue), minimumValue);\n};\nclass Rect {\n    constructor(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n    }\n    containsPoint(x, y) {\n        return (x >= this.x &&\n            y >= this.y &&\n            x <= this.x + this.width &&\n            y <= this.y + this.height);\n    }\n}\nconst Slider = (props) => {\n    const _previousLeft = useRef(0);\n    const [allMeasured, setAllMeasured] = useState(false);\n    const [containerSize, setContainerSize] = useState({ width: 0, height: 0 });\n    const [trackSize, setTrackSize] = useState({ width: 0, height: 0 });\n    const [thumbSize, setThumbSize] = useState({ width: 0, height: 0 });\n    const containerSizeValue = useRef(containerSize);\n    const trackSizeValue = useRef(trackSize);\n    const thumbSizeValue = useRef(thumbSize);\n    const isVertical = useRef(props.orientation === 'vertical');\n    const [value] = useState(new Animated.Value(getBoundedValue(props.value || 0, props.maximumValue || 1, props.minimumValue || 0)));\n    useEffect(() => {\n        containerSizeValue.current = containerSize;\n    }, [containerSize]);\n    useEffect(() => {\n        trackSizeValue.current = trackSize;\n    }, [trackSize]);\n    useEffect(() => {\n        thumbSizeValue.current = thumbSize;\n    }, [thumbSize]);\n    const measureContainer = (x) => {\n        handleMeasure('containerSize', x);\n    };\n    const measureTrack = (x) => {\n        handleMeasure('trackSize', x);\n    };\n    const measureThumb = (x) => {\n        handleMeasure('thumbSize', x);\n    };\n    const handleMeasure = (name, x) => {\n        const { width: layoutWidth, height: layoutHeight } = x.nativeEvent.layout;\n        const width = isVertical.current ? layoutHeight : layoutWidth;\n        const height = isVertical.current ? layoutWidth : layoutHeight;\n        const size = { width, height };\n        if (name === 'containerSize') {\n            setContainerSize(size);\n        }\n        if (name === 'thumbSize') {\n            setThumbSize(size);\n        }\n        if (name === 'trackSize') {\n            setTrackSize(size);\n        }\n        if (thumbSize && trackSize && containerSize) {\n            setAllMeasured(true);\n        }\n    };\n    const currentPropValue = useRef(props.value || 0);\n    const prevPropValue = useRef(0);\n    const didMountRef = useRef(false);\n    const setCurrentValue = React.useCallback((value1) => {\n        value.setValue(value1);\n    }, [value]);\n    React.useEffect(() => {\n        setCurrentValue(props.value || 0);\n    }, [props.value, setCurrentValue]);\n    useEffect(() => {\n        prevPropValue.current = props.value || 0;\n        if (didMountRef.current) {\n            const newValue = getBoundedValue(props.value || 0, props.maximumValue || 1, props.minimumValue || 0);\n            if (prevPropValue.current !== newValue) {\n                if (props.animateTransitions) {\n                    setCurrentValueAnimated(new Animated.Value(newValue));\n                }\n                else {\n                    setCurrentValue(newValue);\n                }\n            }\n        }\n        else {\n            didMountRef.current = true;\n        }\n    });\n    const setCurrentValueAnimated = (value1) => {\n        const { animationType } = props;\n        const animationConfig = Object.assign({}, DEFAULT_ANIMATION_CONFIGS[animationType || 'timing'], props.animationConfig, {\n            toValue: value1,\n        });\n        Animated[animationType || 'timing'](value, animationConfig).start();\n    };\n    const handleMoveShouldSetPanResponder = () => {\n        // Should we become active when the user moves a touch over the thumb?\n        if (!TRACK_STYLE) {\n            return true;\n        }\n        return false;\n    };\n    const handlePanResponderGrant = () => {\n        _previousLeft.current = getThumbLeft(currentPropValue.current);\n        fireChangeEvent('onSlidingStart');\n    };\n    const handlePanResponderMove = (_, gestureState) => {\n        if (props.disabled) {\n            return;\n        }\n        setCurrentValue(getValue(gestureState));\n        fireChangeEvent('onValueChange');\n    };\n    const handlePanResponderRequestEnd = () => {\n        // Should we allow another component to take over this pan?\n        return false;\n    };\n    const handlePanResponderEnd = (_, gestureState) => {\n        if (props.disabled) {\n            return;\n        }\n        setCurrentValue(getValue(gestureState));\n        fireChangeEvent('onSlidingComplete');\n    };\n    const thumbHitTest = ({ nativeEvent }) => {\n        const thumbTouchRect = getThumbTouchRect();\n        return thumbTouchRect.containsPoint(nativeEvent.locationX, nativeEvent.locationY);\n    };\n    const handleStartShouldSetPanResponder = (e /* gestureState: Object */) => {\n        // Should we become active when the user presses down on the thumb?\n        if (!props.allowTouchTrack && !TRACK_STYLE) {\n            return thumbHitTest(e);\n        }\n        if (!trackStyle) {\n            setCurrentValue(getOnTouchValue(e));\n        }\n        fireChangeEvent('onValueChange');\n        return true;\n    };\n    const fireChangeEvent = (event) => {\n        var _a;\n        if (props === null || props === void 0 ? void 0 : props[event]) {\n            (_a = props === null || props === void 0 ? void 0 : props[event]) === null || _a === void 0 ? void 0 : _a.call(props, currentPropValue.current);\n        }\n    };\n    // get value of where some touched on slider.\n    const getOnTouchValue = ({ nativeEvent }) => {\n        const location = isVertical.current\n            ? nativeEvent.locationY\n            : nativeEvent.locationX;\n        return getValueForTouch(location);\n    };\n    const getValueForTouch = (location) => {\n        const length = containerSizeValue.current.width - thumbSizeValue.current.width;\n        const ratio = location / length;\n        let newValue = ratio * ((props.maximumValue || 1) - (props.minimumValue || 0));\n        if (props.step) {\n            newValue = Math.round(newValue / props.step) * props.step;\n        }\n        return getBoundedValue(newValue + (props.minimumValue || 0), props.maximumValue || 1, props.minimumValue || 0);\n    };\n    const getTouchOverflowSize = () => {\n        const { thumbTouchSize } = props;\n        const size = {};\n        if (allMeasured === true) {\n            size.width = Math.max(0, ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE) - thumbSizeValue.current.width);\n            size.height = Math.max(0, ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE) -\n                containerSizeValue.current.height);\n        }\n        return size;\n    };\n    const getTouchOverflowStyle = () => {\n        const { width, height } = getTouchOverflowSize();\n        const touchOverflowStyle = {};\n        if (width !== undefined && height !== undefined) {\n            const verticalMargin = -height / 2;\n            touchOverflowStyle.marginTop = verticalMargin;\n            touchOverflowStyle.marginBottom = verticalMargin;\n            const horizontalMargin = -width / 2;\n            touchOverflowStyle.marginLeft = horizontalMargin;\n            touchOverflowStyle.marginRight = horizontalMargin;\n        }\n        if (props.debugTouchArea === true) {\n            touchOverflowStyle.backgroundColor = 'orange';\n            touchOverflowStyle.opacity = 0.5;\n        }\n        return touchOverflowStyle;\n    };\n    const getValue = (gestureState) => {\n        const location = _previousLeft.current +\n            (isVertical.current ? gestureState.dy : gestureState.dx);\n        return getValueForTouch(location);\n    };\n    React.useEffect(() => {\n        let listenerID = value.addListener((obj) => {\n            currentPropValue.current = obj.value;\n        });\n        return () => {\n            value.removeListener(listenerID);\n        };\n    });\n    const getRatio = (value1) => {\n        return ((value1 - (props.minimumValue || 0)) /\n            ((props.maximumValue || 1) - (props.minimumValue || 0)));\n    };\n    const getThumbLeft = (value1) => {\n        const ratio = getRatio(value1);\n        return (ratio * (containerSizeValue.current.width - thumbSizeValue.current.width));\n    };\n    const getThumbTouchRect = () => {\n        const { thumbTouchSize } = props;\n        const touchOverflowSize = getTouchOverflowSize();\n        const height = (touchOverflowSize === null || touchOverflowSize === void 0 ? void 0 : touchOverflowSize.height) / 2 +\n            (containerSizeValue.current.height -\n                ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE)) /\n                2;\n        const width = touchOverflowSize.width / 2 +\n            getThumbLeft(currentPropValue.current) +\n            (thumbSizeValue.current.width - ((thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE)) /\n                2;\n        if (isVertical.current) {\n            return new Rect(height, width, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE);\n        }\n        return new Rect(width, height, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.width) || THUMB_SIZE, (thumbTouchSize === null || thumbTouchSize === void 0 ? void 0 : thumbTouchSize.height) || THUMB_SIZE);\n    };\n    const renderDebugThumbTouchRect = (thumbLeft) => {\n        const thumbTouchRect = getThumbTouchRect();\n        const positionStyle = {\n            left: thumbLeft,\n            top: thumbTouchRect.y,\n            width: thumbTouchRect.width,\n            height: thumbTouchRect.height,\n        };\n        return <Animated.View style={positionStyle} pointerEvents=\"none\"/>;\n    };\n    const getMinimumTrackStyles = (thumbStart) => {\n        const minimumTrackStyle = {\n            position: 'absolute',\n        };\n        if (isVertical.current) {\n            minimumTrackStyle.height = Animated.add(thumbStart, thumbSizeValue.current.height / 2);\n            minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n        }\n        else {\n            minimumTrackStyle.width = Animated.add(thumbStart, thumbSizeValue.current.width / 2);\n            minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n        }\n        return minimumTrackStyle;\n    };\n    const panResponder = useRef(PanResponder.create({\n        onStartShouldSetPanResponder: handleStartShouldSetPanResponder,\n        onMoveShouldSetPanResponder: handleMoveShouldSetPanResponder,\n        onPanResponderGrant: handlePanResponderGrant,\n        onPanResponderMove: handlePanResponderMove,\n        onPanResponderRelease: handlePanResponderEnd,\n        onPanResponderTerminationRequest: handlePanResponderRequestEnd,\n        onPanResponderTerminate: handlePanResponderEnd,\n    })).current;\n    const { minimumValue, maximumValue, minimumTrackTintColor, maximumTrackTintColor, thumbTintColor, containerStyle, style, trackStyle, thumbStyle, thumbProps, debugTouchArea } = props, other = __rest(props, [\"minimumValue\", \"maximumValue\", \"minimumTrackTintColor\", \"maximumTrackTintColor\", \"thumbTintColor\", \"containerStyle\", \"style\", \"trackStyle\", \"thumbStyle\", \"thumbProps\", \"debugTouchArea\"]);\n    const mainStyles = containerStyle || styles;\n    const appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n    const thumbStart = value.interpolate({\n        inputRange: [minimumValue || 0, maximumValue || 1],\n        outputRange: [0, containerSize.width - thumbSize.width],\n    });\n    const valueVisibleStyle = {};\n    if (!allMeasured) {\n        valueVisibleStyle.height = 0;\n        valueVisibleStyle.width = 0;\n    }\n    const minimumTrackStyle = Object.assign(Object.assign(Object.assign({}, getMinimumTrackStyles(thumbStart)), { backgroundColor: minimumTrackTintColor }), valueVisibleStyle);\n    const touchOverflowStyle = getTouchOverflowStyle();\n    return (<View {...other} style={StyleSheet.flatten([\n        isVertical.current\n            ? mainStyles.containerVertical\n            : mainStyles.containerHorizontal,\n        style,\n    ])} onLayout={measureContainer} accessibilityRole=\"adjustable\" accessibilityValue={{\n        min: minimumValue,\n        max: maximumValue,\n        now: props.value,\n    }}>\n      <View style={StyleSheet.flatten([\n        mainStyles.track,\n        isVertical.current\n            ? mainStyles.trackVertical\n            : mainStyles.trackHorizontal,\n        appliedTrackStyle,\n        { backgroundColor: maximumTrackTintColor },\n    ])} onLayout={measureTrack}/>\n\n      <Animated.View style={StyleSheet.flatten([\n        mainStyles.track,\n        isVertical.current\n            ? mainStyles.trackVertical\n            : mainStyles.trackHorizontal,\n        appliedTrackStyle,\n        minimumTrackStyle,\n    ])}/>\n      <SliderThumb isVisible={allMeasured} onLayout={measureThumb} style={thumbStyle} color={thumbTintColor} start={thumbStart} vertical={isVertical.current} {...thumbProps}/>\n      <View style={StyleSheet.flatten([styles.touchArea, touchOverflowStyle])} {...panResponder.panHandlers}>\n        {debugTouchArea === true && renderDebugThumbTouchRect(thumbStart)}\n      </View>\n    </View>);\n};\nconst SliderThumb = (_a) => {\n    var { Component, isVisible, onLayout, style, start, color, vertical } = _a, props = __rest(_a, [\"Component\", \"isVisible\", \"onLayout\", \"style\", \"start\", \"color\", \"vertical\"]);\n    const ThumbComponent = Component || Animated.View;\n    const axis = vertical ? 'translateY' : 'translateX';\n    const thumbPosition = [{ [axis]: start }];\n    const styleTransform = (style && style.transform) || [];\n    const visibleStyle = isVisible ? {} : { height: 0, width: 0 };\n    return (<ThumbComponent testID=\"sliderThumb\" onLayout={onLayout} style={StyleSheet.flatten([\n        Object.assign({ backgroundColor: color, transform: [...thumbPosition, ...styleTransform] }, visibleStyle),\n        styles.thumb,\n        style,\n    ])} {...props}/>);\n};\nSlider.defaultProps = {\n    value: 0,\n    minimumValue: 0,\n    maximumValue: 1,\n    step: 0,\n    minimumTrackTintColor: '#3f3f3f',\n    maximumTrackTintColor: '#b3b3b3',\n    allowTouchTrack: false,\n    thumbTintColor: 'red',\n    thumbTouchSize: { width: THUMB_SIZE, height: THUMB_SIZE },\n    debugTouchArea: false,\n    animationType: 'timing',\n    orientation: 'horizontal',\n};\nconst styles = StyleSheet.create({\n    containerHorizontal: {\n        height: 40,\n        justifyContent: 'center',\n    },\n    containerVertical: {\n        width: 40,\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    track: {\n        borderRadius: TRACK_SIZE / 2,\n    },\n    trackHorizontal: {\n        height: TRACK_SIZE,\n    },\n    trackVertical: {\n        flex: 1,\n        width: TRACK_SIZE,\n    },\n    thumb: {\n        position: 'absolute',\n        width: THUMB_SIZE,\n        height: THUMB_SIZE,\n        borderRadius: THUMB_SIZE / 2,\n    },\n    touchArea: {\n        position: 'absolute',\n        backgroundColor: 'transparent',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    },\n    debugThumbTouchArea: {\n        position: 'absolute',\n        backgroundColor: 'green',\n        opacity: 0.5,\n    },\n});\nexport { Slider };\nexport default withTheme(Slider, 'Slider');\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}